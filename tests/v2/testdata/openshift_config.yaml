--- # ---
# apiVersion: apiextensions.k8s.io/v1
# kind: CustomResourceDefinition
# metadata:
#   name: infrastructures.config.openshift.io
#   annotations:
#     include.release.openshift.io/ibm-cloud-managed: 'true'
#     include.release.openshift.io/self-managed-high-availability: 'true'
#     include.release.openshift.io/single-node-developer: 'true'
# spec:
#   group: config.openshift.io
#   names:
#     kind: Infrastructure
#     listKind: InfrastructureList
#     plural: infrastructures
#     singular: infrastructure
#   scope: Cluster
#   versions:
#     - name: v1
#       served: true
#       storage: true
#       subresources:
#         status: {}
#       schema:
#         openAPIV3Schema:
#           description: Infrastructure holds cluster-wide information about Infrastructure.  The
#             canonical name is `cluster`
#           type: object
#           required:
#             - spec
#           properties:
#             apiVersion:
#               description: 'APIVersion defines the versioned schema of this representation
#                 of an object. Servers should convert recognized schemas to the latest
#                 internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
#               type: string
#             kind:
#               description: 'Kind is a string value representing the REST resource this
#                 object represents. Servers may infer this from the endpoint the client
#                 submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
#               type: string
#             metadata:
#               type: object
#             spec:
#               description: spec holds user settable values for configuration
#               type: object
#               properties:
#                 cloudConfig:
#                   description: "cloudConfig is a reference to a ConfigMap containing
#                     the cloud provider configuration file. This configuration file is
#                     used to configure the Kubernetes cloud provider integration when
#                     using the built-in cloud provider integration or the external cloud
#                     controller manager. The namespace for this config map is openshift-config.
#                     \n cloudConfig should only be consumed by the kube_cloud_config
#                     controller. The controller is responsible for using the user configuration
#                     in the spec for various platforms and combining that with the user
#                     provided ConfigMap in this field to create a stitched kube cloud
#                     config. The controller generates a ConfigMap `kube-cloud-config`
#                     in `openshift-config-managed` namespace with the kube cloud config
#                     is stored in `cloud.conf` key. All the clients are expected to use
#                     the generated ConfigMap only."
#                   type: object
#                   properties:
#                     key:
#                       description: Key allows pointing to a specific key/value inside
#                         of the configmap.  This is useful for logical file references.
#                       type: string
#                     name:
#                       type: string
#                 platformSpec:
#                   description: platformSpec holds desired information specific to the
#                     underlying infrastructure provider.
#                   type: object
#                   properties:
#                     aws:
#                       description: AWS contains settings specific to the Amazon Web
#                         Services infrastructure provider.
#                       type: object
#                       properties:
#                         serviceEndpoints:
#                           description: serviceEndpoints list contains custom endpoints
#                             which will override default service endpoint of AWS Services.
#                             There must be only one ServiceEndpoint for a service.
#                           type: array
#                           items:
#                             description: AWSServiceEndpoint store the configuration
#                               of a custom url to override existing defaults of AWS Services.
#                             type: object
#                             properties:
#                               name:
#                                 description: name is the name of the AWS service. The
#                                   list of all the service names can be found at https://docs.aws.amazon.com/general/latest/gr/aws-service-information.html
#                                   This must be provided and cannot be empty.
#                                 type: string
#                                 pattern: ^[a-z0-9-]+$
#                               url:
#                                 description: url is fully qualified URI with scheme
#                                   https, that overrides the default generated endpoint
#                                   for a client. This must be provided and cannot be
#                                   empty.
#                                 type: string
#                                 pattern: ^https://
#                     azure:
#                       description: Azure contains settings specific to the Azure infrastructure
#                         provider.
#                       type: object
#                     baremetal:
#                       description: BareMetal contains settings specific to the BareMetal
#                         platform.
#                       type: object
#                     equinixMetal:
#                       description: EquinixMetal contains settings specific to the Equinix
#                         Metal infrastructure provider.
#                       type: object
#                     gcp:
#                       description: GCP contains settings specific to the Google Cloud
#                         Platform infrastructure provider.
#                       type: object
#                     ibmcloud:
#                       description: IBMCloud contains settings specific to the IBMCloud
#                         infrastructure provider.
#                       type: object
#                     kubevirt:
#                       description: Kubevirt contains settings specific to the kubevirt
#                         infrastructure provider.
#                       type: object
#                     openstack:
#                       description: OpenStack contains settings specific to the OpenStack
#                         infrastructure provider.
#                       type: object
#                     ovirt:
#                       description: Ovirt contains settings specific to the oVirt infrastructure
#                         provider.
#                       type: object
#                     type:
#                       description: type is the underlying infrastructure provider for
#                         the cluster. This value controls whether infrastructure automation
#                         such as service load balancers, dynamic volume provisioning,
#                         machine creation and deletion, and other integrations are enabled.
#                         If None, no infrastructure automation is enabled. Allowed values
#                         are "AWS", "Azure", "BareMetal", "GCP", "Libvirt", "OpenStack",
#                         "VSphere", "oVirt", "KubeVirt", "EquinixMetal", and "None".
#                         Individual components may not support all platforms, and must
#                         handle unrecognized platforms as None if they do not support
#                         that platform.
#                       type: string
#                       enum:
#                         - ''
#                         - AWS
#                         - Azure
#                         - BareMetal
#                         - GCP
#                         - Libvirt
#                         - OpenStack
#                         - None
#                         - VSphere
#                         - oVirt
#                         - IBMCloud
#                         - KubeVirt
#                         - EquinixMetal
#                     vsphere:
#                       description: VSphere contains settings specific to the VSphere
#                         infrastructure provider.
#                       type: object
#             status:
#               description: status holds observed values from the cluster. They may not
#                 be overridden.
#               type: object
#               properties:
#                 apiServerInternalURI:
#                   description: apiServerInternalURL is a valid URI with scheme 'https',
#                     address and optionally a port (defaulting to 443).  apiServerInternalURL
#                     can be used by components like kubelets, to contact the Kubernetes
#                     API server using the infrastructure provider rather than Kubernetes
#                     networking.
#                   type: string
#                 apiServerURL:
#                   description: apiServerURL is a valid URI with scheme 'https', address
#                     and optionally a port (defaulting to 443).  apiServerURL can be
#                     used by components like the web console to tell users where to find
#                     the Kubernetes API.
#                   type: string
#                 controlPlaneTopology:
#                   description: controlPlaneTopology expresses the expectations for operands
#                     that normally run on control nodes. The default is 'HighlyAvailable',
#                     which represents the behavior operators have in a "normal" cluster.
#                     The 'SingleReplica' mode will be used in single-node deployments
#                     and the operators should not configure the operand for highly-available
#                     operation
#                   type: string
#                   default: HighlyAvailable
#                   enum:
#                     - HighlyAvailable
#                     - SingleReplica
#                 etcdDiscoveryDomain:
#                   description: 'etcdDiscoveryDomain is the domain used to fetch the
#                     SRV records for discovering etcd servers and clients. For more info:
#                     https://github.com/etcd-io/etcd/blob/329be66e8b3f9e2e6af83c123ff89297e49ebd15/Documentation/op-guide/clustering.md#dns-discovery
#                     deprecated: as of 4.7, this field is no longer set or honored.  It
#                     will be removed in a future release.'
#                   type: string
#                 infrastructureName:
#                   description: infrastructureName uniquely identifies a cluster with
#                     a human friendly name. Once set it should not be changed. Must be
#                     of max length 27 and must have only alphanumeric or hyphen characters.
#                   type: string
#                 infrastructureTopology:
#                   description: infrastructureTopology expresses the expectations for
#                     infrastructure services that do not run on control plane nodes,
#                     usually indicated by a node selector for a `role` value other than
#                     `master`. The default is 'HighlyAvailable', which represents the
#                     behavior operators have in a "normal" cluster. The 'SingleReplica'
#                     mode will be used in single-node deployments and the operators should
#                     not configure the operand for highly-available operation
#                   type: string
#                   default: HighlyAvailable
#                   enum:
#                     - HighlyAvailable
#                     - SingleReplica
#                 platform:
#                   description: "platform is the underlying infrastructure provider for
#                     the cluster. \n Deprecated: Use platformStatus.type instead."
#                   type: string
#                   enum:
#                     - ''
#                     - AWS
#                     - Azure
#                     - BareMetal
#                     - GCP
#                     - Libvirt
#                     - OpenStack
#                     - None
#                     - VSphere
#                     - oVirt
#                     - IBMCloud
#                     - KubeVirt
#                     - EquinixMetal
#                 platformStatus:
#                   description: platformStatus holds status information specific to the
#                     underlying infrastructure provider.
#                   type: object
#                   properties:
#                     aws:
#                       description: AWS contains settings specific to the Amazon Web
#                         Services infrastructure provider.
#                       type: object
#                       properties:
#                         region:
#                           description: region holds the default AWS region for new AWS
#                             resources created by the cluster.
#                           type: string
#                         resourceTags:
#                           description: resourceTags is a list of additional tags to
#                             apply to AWS resources created for the cluster. See https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html
#                             for information on tagging AWS resources. AWS supports a
#                             maximum of 50 tags per resource. OpenShift reserves 25 tags
#                             for its use, leaving 25 tags available for the user.
#                           type: array
#                           maxItems: 25
#                           items:
#                             description: AWSResourceTag is a tag to apply to AWS resources
#                               created for the cluster.
#                             type: object
#                             required:
#                               - key
#                               - value
#                             properties:
#                               key:
#                                 description: key is the key of the tag
#                                 type: string
#                                 maxLength: 128
#                                 minLength: 1
#                                 pattern: ^[0-9A-Za-z_.:/=+-@]+$
#                               value:
#                                 description: value is the value of the tag. Some AWS
#                                   service do not support empty values. Since tags are
#                                   added to resources in many services, the length of
#                                   the tag value must meet the requirements of all services.
#                                 type: string
#                                 maxLength: 256
#                                 minLength: 1
#                                 pattern: ^[0-9A-Za-z_.:/=+-@]+$
#                         serviceEndpoints:
#                           description: ServiceEndpoints list contains custom endpoints
#                             which will override default service endpoint of AWS Services.
#                             There must be only one ServiceEndpoint for a service.
#                           type: array
#                           items:
#                             description: AWSServiceEndpoint store the configuration
#                               of a custom url to override existing defaults of AWS Services.
#                             type: object
#                             properties:
#                               name:
#                                 description: name is the name of the AWS service. The
#                                   list of all the service names can be found at https://docs.aws.amazon.com/general/latest/gr/aws-service-information.html
#                                   This must be provided and cannot be empty.
#                                 type: string
#                                 pattern: ^[a-z0-9-]+$
#                               url:
#                                 description: url is fully qualified URI with scheme
#                                   https, that overrides the default generated endpoint
#                                   for a client. This must be provided and cannot be
#                                   empty.
#                                 type: string
#                                 pattern: ^https://
#                     azure:
#                       description: Azure contains settings specific to the Azure infrastructure
#                         provider.
#                       type: object
#                       properties:
#                         cloudName:
#                           description: cloudName is the name of the Azure cloud environment
#                             which can be used to configure the Azure SDK with the appropriate
#                             Azure API endpoints. If empty, the value is equal to `AzurePublicCloud`.
#                           type: string
#                           enum:
#                             - ''
#                             - AzurePublicCloud
#                             - AzureUSGovernmentCloud
#                             - AzureChinaCloud
#                             - AzureGermanCloud
#                         networkResourceGroupName:
#                           description: networkResourceGroupName is the Resource Group
#                             for network resources like the Virtual Network and Subnets
#                             used by the cluster. If empty, the value is same as ResourceGroupName.
#                           type: string
#                         resourceGroupName:
#                           description: resourceGroupName is the Resource Group for new
#                             Azure resources created for the cluster.
#                           type: string
#                     baremetal:
#                       description: BareMetal contains settings specific to the BareMetal
#                         platform.
#                       type: object
#                       properties:
#                         apiServerInternalIP:
#                           description: apiServerInternalIP is an IP address to contact
#                             the Kubernetes API server that can be used by components
#                             inside the cluster, like kubelets using the infrastructure
#                             rather than Kubernetes networking. It is the IP that the
#                             Infrastructure.status.apiServerInternalURI points to. It
#                             is the IP for a self-hosted load balancer in front of the
#                             API servers.
#                           type: string
#                         ingressIP:
#                           description: ingressIP is an external IP which routes to the
#                             default ingress controller. The IP is a suitable target
#                             of a wildcard DNS record used to resolve default route host
#                             names.
#                           type: string
#                         nodeDNSIP:
#                           description: nodeDNSIP is the IP address for the internal
#                             DNS used by the nodes. Unlike the one managed by the DNS
#                             operator, `NodeDNSIP` provides name resolution for the nodes
#                             themselves. There is no DNS-as-a-service for BareMetal deployments.
#                             In order to minimize necessary changes to the datacenter
#                             DNS, a DNS service is hosted as a static pod to serve those
#                             hostnames to the nodes in the cluster.
#                           type: string
#                     equinixMetal:
#                       description: EquinixMetal contains settings specific to the Equinix
#                         Metal infrastructure provider.
#                       type: object
#                       properties:
#                         apiServerInternalIP:
#                           description: apiServerInternalIP is an IP address to contact
#                             the Kubernetes API server that can be used by components
#                             inside the cluster, like kubelets using the infrastructure
#                             rather than Kubernetes networking. It is the IP that the
#                             Infrastructure.status.apiServerInternalURI points to. It
#                             is the IP for a self-hosted load balancer in front of the
#                             API servers.
#                           type: string
#                         ingressIP:
#                           description: ingressIP is an external IP which routes to the
#                             default ingress controller. The IP is a suitable target
#                             of a wildcard DNS record used to resolve default route host
#                             names.
#                           type: string
#                     gcp:
#                       description: GCP contains settings specific to the Google Cloud
#                         Platform infrastructure provider.
#                       type: object
#                       properties:
#                         projectID:
#                           description: resourceGroupName is the Project ID for new GCP
#                             resources created for the cluster.
#                           type: string
#                         region:
#                           description: region holds the region for new GCP resources
#                             created for the cluster.
#                           type: string
#                     ibmcloud:
#                       description: IBMCloud contains settings specific to the IBMCloud
#                         infrastructure provider.
#                       type: object
#                       properties:
#                         location:
#                           description: Location is where the cluster has been deployed
#                           type: string
#                         providerType:
#                           description: ProviderType indicates the type of cluster that
#                             was created
#                           type: string
#                         resourceGroupName:
#                           description: ResourceGroupName is the Resource Group for new
#                             IBMCloud resources created for the cluster.
#                           type: string
#                     kubevirt:
#                       description: Kubevirt contains settings specific to the kubevirt
#                         infrastructure provider.
#                       type: object
#                       properties:
#                         apiServerInternalIP:
#                           description: apiServerInternalIP is an IP address to contact
#                             the Kubernetes API server that can be used by components
#                             inside the cluster, like kubelets using the infrastructure
#                             rather than Kubernetes networking. It is the IP that the
#                             Infrastructure.status.apiServerInternalURI points to. It
#                             is the IP for a self-hosted load balancer in front of the
#                             API servers.
#                           type: string
#                         ingressIP:
#                           description: ingressIP is an external IP which routes to the
#                             default ingress controller. The IP is a suitable target
#                             of a wildcard DNS record used to resolve default route host
#                             names.
#                           type: string
#                     openstack:
#                       description: OpenStack contains settings specific to the OpenStack
#                         infrastructure provider.
#                       type: object
#                       properties:
#                         apiServerInternalIP:
#                           description: apiServerInternalIP is an IP address to contact
#                             the Kubernetes API server that can be used by components
#                             inside the cluster, like kubelets using the infrastructure
#                             rather than Kubernetes networking. It is the IP that the
#                             Infrastructure.status.apiServerInternalURI points to. It
#                             is the IP for a self-hosted load balancer in front of the
#                             API servers.
#                           type: string
#                         cloudName:
#                           description: cloudName is the name of the desired OpenStack
#                             cloud in the client configuration file (`clouds.yaml`).
#                           type: string
#                         ingressIP:
#                           description: ingressIP is an external IP which routes to the
#                             default ingress controller. The IP is a suitable target
#                             of a wildcard DNS record used to resolve default route host
#                             names.
#                           type: string
#                         nodeDNSIP:
#                           description: nodeDNSIP is the IP address for the internal
#                             DNS used by the nodes. Unlike the one managed by the DNS
#                             operator, `NodeDNSIP` provides name resolution for the nodes
#                             themselves. There is no DNS-as-a-service for OpenStack deployments.
#                             In order to minimize necessary changes to the datacenter
#                             DNS, a DNS service is hosted as a static pod to serve those
#                             hostnames to the nodes in the cluster.
#                           type: string
#                     ovirt:
#                       description: Ovirt contains settings specific to the oVirt infrastructure
#                         provider.
#                       type: object
#                       properties:
#                         apiServerInternalIP:
#                           description: apiServerInternalIP is an IP address to contact
#                             the Kubernetes API server that can be used by components
#                             inside the cluster, like kubelets using the infrastructure
#                             rather than Kubernetes networking. It is the IP that the
#                             Infrastructure.status.apiServerInternalURI points to. It
#                             is the IP for a self-hosted load balancer in front of the
#                             API servers.
#                           type: string
#                         ingressIP:
#                           description: ingressIP is an external IP which routes to the
#                             default ingress controller. The IP is a suitable target
#                             of a wildcard DNS record used to resolve default route host
#                             names.
#                           type: string
#                         nodeDNSIP:
#                           description: 'deprecated: as of 4.6, this field is no longer
#                             set or honored.  It will be removed in a future release.'
#                           type: string
#                     type:
#                       description: "type is the underlying infrastructure provider for
#                         the cluster. This value controls whether infrastructure automation
#                         such as service load balancers, dynamic volume provisioning,
#                         machine creation and deletion, and other integrations are enabled.
#                         If None, no infrastructure automation is enabled. Allowed values
#                         are \"AWS\", \"Azure\", \"BareMetal\", \"GCP\", \"Libvirt\",
#                         \"OpenStack\", \"VSphere\", \"oVirt\", \"EquinixMetal\", and
#                         \"None\". Individual components may not support all platforms,
#                         and must handle unrecognized platforms as None if they do not
#                         support that platform. \n This value will be synced with to
#                         the `status.platform` and `status.platformStatus.type`. Currently
#                         this value cannot be changed once set."
#                       type: string
#                       enum:
#                         - ''
#                         - AWS
#                         - Azure
#                         - BareMetal
#                         - GCP
#                         - Libvirt
#                         - OpenStack
#                         - None
#                         - VSphere
#                         - oVirt
#                         - IBMCloud
#                         - KubeVirt
#                         - EquinixMetal
#                     vsphere:
#                       description: VSphere contains settings specific to the VSphere
#                         infrastructure provider.
#                       type: object
#                       properties:
#                         apiServerInternalIP:
#                           description: apiServerInternalIP is an IP address to contact
#                             the Kubernetes API server that can be used by components
#                             inside the cluster, like kubelets using the infrastructure
#                             rather than Kubernetes networking. It is the IP that the
#                             Infrastructure.status.apiServerInternalURI points to. It
#                             is the IP for a self-hosted load balancer in front of the
#                             API servers.
#                           type: string
#                         ingressIP:
#                           description: ingressIP is an external IP which routes to the
#                             default ingress controller. The IP is a suitable target
#                             of a wildcard DNS record used to resolve default route host
#                             names.
#                           type: string
#                         nodeDNSIP:
#                           description: nodeDNSIP is the IP address for the internal
#                             DNS used by the nodes. Unlike the one managed by the DNS
#                             operator, `NodeDNSIP` provides name resolution for the nodes
#                             themselves. There is no DNS-as-a-service for vSphere deployments.
#                             In order to minimize necessary changes to the datacenter
#                             DNS, a DNS service is hosted as a static pod to serve those
#                             hostnames to the nodes in the cluster.
#                           type: string
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusterversions.config.openshift.io
spec:
  group: config.openshift.io
  names:
    kind: ClusterVersion
    listKind: ClusterVersionList
    plural: clusterversions
    singular: clusterversion
  scope: Cluster
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusterversions.config.openshift.io
  annotations:
    include.release.openshift.io/self-managed-high-availability: 'true'
    include.release.openshift.io/single-node-developer: 'true'
spec:
  group: config.openshift.io
  scope: Cluster
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: ClusterVersion is the configuration for the ClusterVersionOperator.
            This is where parameters related to automatic updates can be set.
          type: object
          required:
            - spec
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec is the desired state of the cluster version - the operator
                will work to ensure that the desired version is applied to the cluster.
              type: object
              required:
                - clusterID
              properties:
                channel:
                  description: channel is an identifier for explicitly requesting that
                    a non-default set of updates be applied to this cluster. The default
                    channel will be contain stable updates that are appropriate for
                    production clusters.
                  type: string
                clusterID:
                  description: clusterID uniquely identifies this cluster. This is expected
                    to be an RFC4122 UUID value (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    in hexadecimal values). This is a required field.
                  type: string
                desiredUpdate:
                  description: "desiredUpdate is an optional field that indicates the
                    desired value of the cluster version. Setting this value will trigger
                    an upgrade (if the current version does not match the desired version).
                    The set of recommended update values is listed as part of available
                    updates in status, and setting values outside that range may cause
                    the upgrade to fail. You may specify the version field without setting
                    image if an update exists with that version in the availableUpdates
                    or history. \n If an upgrade fails the operator will halt and report
                    status about the failing component. Setting the desired update value
                    back to the previous version will cause a rollback to be attempted.
                    Not all rollbacks will succeed."
                  type: object
                  properties:
                    force:
                      description: "force allows an administrator to update to an image
                        that has failed verification, does not appear in the availableUpdates
                        list, or otherwise would be blocked by normal protections on
                        update. This option should only be used when the authenticity
                        of the provided image has been verified out of band because
                        the provided image will run with full administrative access
                        to the cluster. Do not use this flag with images that comes
                        from unknown or potentially malicious sources. \n This flag
                        does not override other forms of consistency checking that are
                        required before a new update is deployed."
                      type: boolean
                    image:
                      description: image is a container image location that contains
                        the update. When this field is part of spec, image is optional
                        if version is specified and the availableUpdates field contains
                        a matching version.
                      type: string
                    version:
                      description: version is a semantic versioning identifying the
                        update version. When this field is part of spec, version is
                        optional if image is specified.
                      type: string
                overrides:
                  description: overrides is list of overides for components that are
                    managed by cluster version operator. Marking a component unmanaged
                    will prevent the operator from creating or updating the object.
                  type: array
                  items:
                    description: ComponentOverride allows overriding cluster version
                      operator's behavior for a component.
                    type: object
                    required:
                      - group
                      - kind
                      - name
                      - namespace
                      - unmanaged
                    properties:
                      group:
                        description: group identifies the API group that the kind is
                          in.
                        type: string
                      kind:
                        description: kind indentifies which object to override.
                        type: string
                      name:
                        description: name is the component's name.
                        type: string
                      namespace:
                        description: namespace is the component's namespace. If the
                          resource is cluster scoped, the namespace should be empty.
                        type: string
                      unmanaged:
                        description: 'unmanaged controls if cluster version operator
                          should stop managing the resources in this cluster. Default:
                          false'
                        type: boolean
                upstream:
                  description: upstream may be used to specify the preferred update
                    server. By default it will use the appropriate update server for
                    the cluster and region.
                  type: string
            status:
              description: status contains information about the available updates and
                any in-progress updates.
              type: object
              required:
                - availableUpdates
                - desired
                - observedGeneration
                - versionHash
              properties:
                availableUpdates:
                  description: availableUpdates contains the list of updates that are
                    appropriate for this cluster. This list may be empty if no updates
                    are recommended, if the update service is unavailable, or if an
                    invalid channel has been specified.
                  type: array
                  items:
                    description: Release represents an OpenShift release image and associated
                      metadata.
                    type: object
                    properties:
                      channels:
                        description: channels is the set of Cincinnati channels to which
                          the release currently belongs.
                        type: array
                        items:
                          type: string
                      image:
                        description: image is a container image location that contains
                          the update. When this field is part of spec, image is optional
                          if version is specified and the availableUpdates field contains
                          a matching version.
                        type: string
                      url:
                        description: url contains information about this release. This
                          URL is set by the 'url' metadata property on a release or
                          the metadata returned by the update API and should be displayed
                          as a link in user interfaces. The URL field may not be set
                          for test or nightly releases.
                        type: string
                      version:
                        description: version is a semantic versioning identifying the
                          update version. When this field is part of spec, version is
                          optional if image is specified.
                        type: string
                  nullable: true
                conditions:
                  description: conditions provides information about the cluster version.
                    The condition "Available" is set to true if the desiredUpdate has
                    been reached. The condition "Progressing" is set to true if an update
                    is being applied. The condition "Degraded" is set to true if an
                    update is currently blocked by a temporary or permanent error. Conditions
                    are only valid for the current desiredUpdate when metadata.generation
                    is equal to status.generation.
                  type: array
                  items:
                    description: ClusterOperatorStatusCondition represents the state
                      of the operator's managed and monitored components.
                    type: object
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the time of the last update
                          to the current status property.
                        type: string
                        format: date-time
                      message:
                        description: message provides additional information about the
                          current condition. This is only to be consumed by humans.  It
                          may contain Line Feed characters (U+000A), which should be
                          rendered as new lines.
                        type: string
                      reason:
                        description: reason is the CamelCase reason for the condition's
                          current status.
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: type specifies the aspect reported by this condition.
                        type: string
                desired:
                  description: desired is the version that the cluster is reconciling
                    towards. If the cluster is not yet fully initialized desired will
                    be set with the information available, which may be an image or
                    a tag.
                  type: object
                  properties:
                    channels:
                      description: channels is the set of Cincinnati channels to which
                        the release currently belongs.
                      type: array
                      items:
                        type: string
                    image:
                      description: image is a container image location that contains
                        the update. When this field is part of spec, image is optional
                        if version is specified and the availableUpdates field contains
                        a matching version.
                      type: string
                    url:
                      description: url contains information about this release. This
                        URL is set by the 'url' metadata property on a release or the
                        metadata returned by the update API and should be displayed
                        as a link in user interfaces. The URL field may not be set for
                        test or nightly releases.
                      type: string
                    version:
                      description: version is a semantic versioning identifying the
                        update version. When this field is part of spec, version is
                        optional if image is specified.
                      type: string
                history:
                  description: history contains a list of the most recent versions applied
                    to the cluster. This value may be empty during cluster startup,
                    and then will be updated when a new update is being applied. The
                    newest update is first in the list and it is ordered by recency.
                    Updates in the history have state Completed if the rollout completed
                    - if an update was failing or halfway applied the state will be
                    Partial. Only a limited amount of update history is preserved.
                  type: array
                  items:
                    description: UpdateHistory is a single attempted update to the cluster.
                    type: object
                    required:
                      - completionTime
                      - image
                      - startedTime
                      - state
                      - verified
                    properties:
                      completionTime:
                        description: completionTime, if set, is when the update was
                          fully applied. The update that is currently being applied
                          will have a null completion time. Completion time will always
                          be set for entries that are not the current update (usually
                          to the started time of the next update).
                        type: string
                        format: date-time
                        nullable: true
                      image:
                        description: image is a container image location that contains
                          the update. This value is always populated.
                        type: string
                      startedTime:
                        description: startedTime is the time at which the update was
                          started.
                        type: string
                        format: date-time
                      state:
                        description: state reflects whether the update was fully applied.
                          The Partial state indicates the update is not fully applied,
                          while the Completed state indicates the update was successfully
                          rolled out at least once (all parts of the update successfully
                          applied).
                        type: string
                      verified:
                        description: verified indicates whether the provided update
                          was properly verified before it was installed. If this is
                          false the cluster may not be trusted.
                        type: boolean
                      version:
                        description: version is a semantic versioning identifying the
                          update version. If the requested image does not define a version,
                          or if a failure occurs retrieving the image, this value may
                          be empty.
                        type: string
                observedGeneration:
                  description: observedGeneration reports which version of the spec
                    is being synced. If this value is not equal to metadata.generation,
                    then the desired and conditions fields may represent a previous
                    version.
                  type: integer
                  format: int64
                versionHash:
                  description: versionHash is a fingerprint of the content that the
                    cluster will be updated with. It is used by the operator to avoid
                    unnecessary work and is for internal use only.
                  type: string
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Version
          type: string
          jsonPath: .status.history[?(@.state=="Completed")].version
        - name: Available
          type: string
          jsonPath: .status.conditions[?(@.type=="Available")].status
        - name: Progressing
          type: string
          jsonPath: .status.conditions[?(@.type=="Progressing")].status
        - name: Since
          type: date
          jsonPath: .status.conditions[?(@.type=="Progressing")].lastTransitionTime
        - name: Status
          type: string
          jsonPath: .status.conditions[?(@.type=="Progressing")].message
  names:
    plural: clusterversions
    singular: clusterversion
    kind: ClusterVersion
