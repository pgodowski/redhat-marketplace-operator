// Code generated by protoc-gen-go-drpc. DO NOT EDIT.
// protoc-gen-go-drpc version: v0.0.24
// source: fileretriever/fileretriever.proto

package fileretriever

import (
	context "context"
	errors "errors"
	protojson "google.golang.org/protobuf/encoding/protojson"
	proto "google.golang.org/protobuf/proto"
	drpc "storj.io/drpc"
	drpcerr "storj.io/drpc/drpcerr"
)

type drpcEncoding_File_fileretriever_fileretriever_proto struct{}

func (drpcEncoding_File_fileretriever_fileretriever_proto) Marshal(msg drpc.Message) ([]byte, error) {
	return proto.Marshal(msg.(proto.Message))
}

func (drpcEncoding_File_fileretriever_fileretriever_proto) MarshalAppend(buf []byte, msg drpc.Message) ([]byte, error) {
	return proto.MarshalOptions{}.MarshalAppend(buf, msg.(proto.Message))
}

func (drpcEncoding_File_fileretriever_fileretriever_proto) Unmarshal(buf []byte, msg drpc.Message) error {
	return proto.Unmarshal(buf, msg.(proto.Message))
}

func (drpcEncoding_File_fileretriever_fileretriever_proto) JSONMarshal(msg drpc.Message) ([]byte, error) {
	return protojson.Marshal(msg.(proto.Message))
}

func (drpcEncoding_File_fileretriever_fileretriever_proto) JSONUnmarshal(buf []byte, msg drpc.Message) error {
	return protojson.Unmarshal(buf, msg.(proto.Message))
}

type DRPCFileRetrieverClient interface {
	DRPCConn() drpc.Conn

	ListFileMetadata(ctx context.Context, in *ListFileMetadataRequest) (DRPCFileRetriever_ListFileMetadataClient, error)
	GetFileMetadata(ctx context.Context, in *GetFileMetadataRequest) (*GetFileMetadataResponse, error)
	DownloadFile(ctx context.Context, in *DownloadFileRequest) (DRPCFileRetriever_DownloadFileClient, error)
}

type drpcFileRetrieverClient struct {
	cc drpc.Conn
}

func NewDRPCFileRetrieverClient(cc drpc.Conn) DRPCFileRetrieverClient {
	return &drpcFileRetrieverClient{cc}
}

func (c *drpcFileRetrieverClient) DRPCConn() drpc.Conn { return c.cc }

func (c *drpcFileRetrieverClient) ListFileMetadata(ctx context.Context, in *ListFileMetadataRequest) (DRPCFileRetriever_ListFileMetadataClient, error) {
	stream, err := c.cc.NewStream(ctx, "/fileretriever.FileRetriever/ListFileMetadata", drpcEncoding_File_fileretriever_fileretriever_proto{})
	if err != nil {
		return nil, err
	}
	x := &drpcFileRetriever_ListFileMetadataClient{stream}
	if err := x.MsgSend(in, drpcEncoding_File_fileretriever_fileretriever_proto{}); err != nil {
		return nil, err
	}
	if err := x.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DRPCFileRetriever_ListFileMetadataClient interface {
	drpc.Stream
	Recv() (*ListFileMetadataResponse, error)
}

type drpcFileRetriever_ListFileMetadataClient struct {
	drpc.Stream
}

func (x *drpcFileRetriever_ListFileMetadataClient) Recv() (*ListFileMetadataResponse, error) {
	m := new(ListFileMetadataResponse)
	if err := x.MsgRecv(m, drpcEncoding_File_fileretriever_fileretriever_proto{}); err != nil {
		return nil, err
	}
	return m, nil
}

func (x *drpcFileRetriever_ListFileMetadataClient) RecvMsg(m *ListFileMetadataResponse) error {
	return x.MsgRecv(m, drpcEncoding_File_fileretriever_fileretriever_proto{})
}

func (c *drpcFileRetrieverClient) GetFileMetadata(ctx context.Context, in *GetFileMetadataRequest) (*GetFileMetadataResponse, error) {
	out := new(GetFileMetadataResponse)
	err := c.cc.Invoke(ctx, "/fileretriever.FileRetriever/GetFileMetadata", drpcEncoding_File_fileretriever_fileretriever_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcFileRetrieverClient) DownloadFile(ctx context.Context, in *DownloadFileRequest) (DRPCFileRetriever_DownloadFileClient, error) {
	stream, err := c.cc.NewStream(ctx, "/fileretriever.FileRetriever/DownloadFile", drpcEncoding_File_fileretriever_fileretriever_proto{})
	if err != nil {
		return nil, err
	}
	x := &drpcFileRetriever_DownloadFileClient{stream}
	if err := x.MsgSend(in, drpcEncoding_File_fileretriever_fileretriever_proto{}); err != nil {
		return nil, err
	}
	if err := x.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DRPCFileRetriever_DownloadFileClient interface {
	drpc.Stream
	Recv() (*DownloadFileResponse, error)
}

type drpcFileRetriever_DownloadFileClient struct {
	drpc.Stream
}

func (x *drpcFileRetriever_DownloadFileClient) Recv() (*DownloadFileResponse, error) {
	m := new(DownloadFileResponse)
	if err := x.MsgRecv(m, drpcEncoding_File_fileretriever_fileretriever_proto{}); err != nil {
		return nil, err
	}
	return m, nil
}

func (x *drpcFileRetriever_DownloadFileClient) RecvMsg(m *DownloadFileResponse) error {
	return x.MsgRecv(m, drpcEncoding_File_fileretriever_fileretriever_proto{})
}

type DRPCFileRetrieverServer interface {
	ListFileMetadata(*ListFileMetadataRequest, DRPCFileRetriever_ListFileMetadataStream) error
	GetFileMetadata(context.Context, *GetFileMetadataRequest) (*GetFileMetadataResponse, error)
	DownloadFile(*DownloadFileRequest, DRPCFileRetriever_DownloadFileStream) error
}

type DRPCFileRetrieverUnimplementedServer struct{}

func (s *DRPCFileRetrieverUnimplementedServer) ListFileMetadata(*ListFileMetadataRequest, DRPCFileRetriever_ListFileMetadataStream) error {
	return drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCFileRetrieverUnimplementedServer) GetFileMetadata(context.Context, *GetFileMetadataRequest) (*GetFileMetadataResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCFileRetrieverUnimplementedServer) DownloadFile(*DownloadFileRequest, DRPCFileRetriever_DownloadFileStream) error {
	return drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

type DRPCFileRetrieverDescription struct{}

func (DRPCFileRetrieverDescription) NumMethods() int { return 3 }

func (DRPCFileRetrieverDescription) Method(n int) (string, drpc.Encoding, drpc.Receiver, interface{}, bool) {
	switch n {
	case 0:
		return "/fileretriever.FileRetriever/ListFileMetadata", drpcEncoding_File_fileretriever_fileretriever_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return nil, srv.(DRPCFileRetrieverServer).
					ListFileMetadata(
						in1.(*ListFileMetadataRequest),
						&drpcFileRetriever_ListFileMetadataStream{in2.(drpc.Stream)},
					)
			}, DRPCFileRetrieverServer.ListFileMetadata, true
	case 1:
		return "/fileretriever.FileRetriever/GetFileMetadata", drpcEncoding_File_fileretriever_fileretriever_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCFileRetrieverServer).
					GetFileMetadata(
						ctx,
						in1.(*GetFileMetadataRequest),
					)
			}, DRPCFileRetrieverServer.GetFileMetadata, true
	case 2:
		return "/fileretriever.FileRetriever/DownloadFile", drpcEncoding_File_fileretriever_fileretriever_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return nil, srv.(DRPCFileRetrieverServer).
					DownloadFile(
						in1.(*DownloadFileRequest),
						&drpcFileRetriever_DownloadFileStream{in2.(drpc.Stream)},
					)
			}, DRPCFileRetrieverServer.DownloadFile, true
	default:
		return "", nil, nil, nil, false
	}
}

func DRPCRegisterFileRetriever(mux drpc.Mux, impl DRPCFileRetrieverServer) error {
	return mux.Register(impl, DRPCFileRetrieverDescription{})
}

type DRPCFileRetriever_ListFileMetadataStream interface {
	drpc.Stream
	Send(*ListFileMetadataResponse) error
}

type drpcFileRetriever_ListFileMetadataStream struct {
	drpc.Stream
}

func (x *drpcFileRetriever_ListFileMetadataStream) Send(m *ListFileMetadataResponse) error {
	return x.MsgSend(m, drpcEncoding_File_fileretriever_fileretriever_proto{})
}

type DRPCFileRetriever_GetFileMetadataStream interface {
	drpc.Stream
	SendAndClose(*GetFileMetadataResponse) error
}

type drpcFileRetriever_GetFileMetadataStream struct {
	drpc.Stream
}

func (x *drpcFileRetriever_GetFileMetadataStream) SendAndClose(m *GetFileMetadataResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_fileretriever_fileretriever_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCFileRetriever_DownloadFileStream interface {
	drpc.Stream
	Send(*DownloadFileResponse) error
}

type drpcFileRetriever_DownloadFileStream struct {
	drpc.Stream
}

func (x *drpcFileRetriever_DownloadFileStream) Send(m *DownloadFileResponse) error {
	return x.MsgSend(m, drpcEncoding_File_fileretriever_fileretriever_proto{})
}
