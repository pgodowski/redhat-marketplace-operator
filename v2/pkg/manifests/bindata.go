// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../assets/metric-state/deployment.yaml (4.54kB)
// ../../assets/metric-state/service-monitor.yaml (965B)
// ../../assets/metric-state/service.yaml (559B)
// ../../assets/prometheus/additional-scrape-configs.yaml (95B)
// ../../assets/prometheus/htpasswd-secret.yaml (150B)
// ../../assets/prometheus/kube-rbac-proxy-secret.yaml (417B)
// ../../assets/prometheus/kube-state-service-monitor.yaml (972B)
// ../../assets/prometheus/kubelet-serving-ca-bundle.yaml (101B)
// ../../assets/prometheus/prometheus-additional.yaml (3.217kB)
// ../../assets/prometheus/prometheus-datasources-secret.yaml (91B)
// ../../assets/prometheus/prometheus-rules.yaml (334B)
// ../../assets/prometheus/prometheus.yaml (5.041kB)
// ../../assets/prometheus/proxy-secret.yaml (147B)
// ../../assets/prometheus/service.yaml (440B)
// ../../assets/prometheus/serving-certs-ca-bundle.yaml (169B)
// ../../assets/prometheus-operator/deployment.yaml (3.982kB)
// ../../assets/prometheus-operator/operator-certs-ca-bundle.yaml (170B)
// ../../assets/prometheus-operator/service.yaml (543B)
// ../../assets/razee/razee-job.yaml (359B)
// ../../assets/razee/razee-namespace.yaml (54B)
// ../../assets/razee/remote-resource-s3.yaml (2.049kB)
// ../../assets/razee/watch-keeper.yaml (2.267kB)
// ../../assets/reporter/job.yaml (1.347kB)
// ../../assets/signer/ca.pem (1.237kB)

package manifests

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsMetricStateDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x5d\x4f\x23\x37\x14\x7d\xcf\xaf\xf0\xdb\xbe\xd4\xf9\xda\xa5\xdd\xb5\xc4\x03\x0d\x69\x59\x09\x58\xd4\xa0\xf6\x31\x72\x9c\x9b\xc4\x8a\xbf\x7a\xef\x1d\xca\xa8\xea\x7f\xaf\xcc\x04\x98\x4c\x32\x84\x74\x2b\xb5\x48\xeb\x27\x64\x9f\xfb\x31\xf7\x1c\x1f\x62\x9d\xec\xaf\x80\x64\x63\x50\x42\xa7\x44\xbd\xbb\x41\x67\x6d\xc3\x5c\x89\x73\x48\x2e\x96\x1e\x02\x77\x3c\xb0\x9e\x6b\xd6\xaa\x23\x44\xd0\x1e\x94\xc0\x95\x97\x1e\x18\xad\x91\xc4\x9a\xa1\x23\x84\xd3\x33\x70\x94\x21\x22\x67\xea\xae\x8b\x19\x60\x00\x06\xea\xda\xd8\x33\xd1\xa7\x18\x20\xb0\x12\x26\x06\xc6\xe8\x1c\x60\x0b\xb6\xa5\x04\x25\x30\x39\x3d\x42\x72\xd6\x68\x52\x62\xd0\x11\x82\xc0\x81\xe1\x88\x55\x61\xaf\xd9\xac\x2e\x6b\x9d\x1c\xd7\xcb\x11\xdd\x08\xc1\xe0\x93\xd3\x0c\x9b\xca\xb5\x19\xe5\xe5\xb6\x9a\x38\xb6\x8d\xa3\x1a\x11\xe2\x71\x34\x79\xe5\x5c\xda\x06\xc0\x5a\x71\xb9\xa1\x6d\x27\xb0\x5a\xd6\xeb\xe5\x81\xd3\x9b\xc2\xb9\x9b\xe8\xac\x29\x95\xf8\xbc\xb8\x8e\x7c\x83\x40\x59\x1b\xcf\x38\x04\x8a\x05\x1a\xa8\xd5\xad\xb6\x7f\x2f\x80\xb8\xb1\x2b\x84\x49\x85\x12\x27\x7d\xdf\xd8\xf6\xe0\x23\x96\x4a\x0c\x4e\xfa\x57\x76\xeb\xcc\x59\x6f\x5b\xd2\x0c\xfa\xad\x79\x3e\xe4\x3c\xa2\xb1\x6a\x58\x02\x53\xa0\xe5\x72\x14\x03\xc3\x3d\x2b\xf1\xe7\x5f\xb5\x53\x06\xf4\x36\x68\xb6\x31\x5c\x01\x51\x1e\xc4\x66\x08\x3f\x69\xe7\x66\xda\xac\x6f\xe3\x65\x5c\xd2\x97\x30\x46\x8c\x58\x8b\x4c\x11\x9b\xcd\xca\x67\x6e\x6e\x22\xb2\x12\x1f\xfb\x1f\xfb\x8d\xb6\x2b\x9e\xfe\x80\xd9\xc1\xc8\xc1\xde\xc8\x8a\x43\xaa\x31\xbf\x21\x17\x61\xbe\xd2\x2c\xbd\xc6\x35\x70\x72\xda\x80\xd4\x05\xaf\xcc\x0a\xcc\x5a\x65\x19\x53\x9d\xcb\x2a\xd9\x13\xe0\x2b\x59\x1e\xb4\xb2\x33\x3c\x82\xe4\x61\x3b\xc7\x2f\x53\xfc\x4f\x49\x94\x42\xe3\x72\x87\x43\x29\x5d\x5c\x72\x24\x9e\x03\xe2\xce\xd9\x83\x9c\x40\x3a\x4b\x0c\x41\xea\xf9\x1c\x81\xe8\x54\x7d\xea\x7f\x1a\xee\x60\xd9\x91\x34\x36\xad\x00\x25\x15\x96\x81\x4e\x6f\x2f\x27\xd3\xf1\xe8\xfc\x62\x3c\xfd\x65\x72\x36\xfd\xed\xf3\xed\xc5\xf4\x6c\x3c\x99\x0e\x86\x1f\xa7\x3f\x8f\xae\xa6\x93\x8b\xb3\xe1\xc9\xf7\xdf\x3d\xa3\xc6\xa3\xf3\x03\xb8\x9d\x3c\xa3\x1f\x47\xaf\xca\xb3\x17\xf7\x42\xb6\x9d\xaf\x2b\x12\x31\x82\xf6\xa7\x2b\xe6\xa4\x7a\xbd\xc1\xf0\x87\x6e\xbf\xdb\xef\x0e\x54\x96\x7d\x6f\xff\x34\x00\x59\x2e\xac\x83\xd3\x1e\xb0\xe9\xb1\xa3\x5e\x42\x7b\xa7\x19\xf2\xdf\x5d\x83\xbc\x37\x6c\x83\x91\x6b\x28\x5f\x88\x5e\x43\xd9\xda\xa4\x34\xba\x16\x69\x62\x58\xd8\xa5\xd7\x89\x7a\x04\x78\x67\xc3\xb2\xea\xcc\x68\x39\x2b\xc2\xdc\x41\xb5\x6d\x40\x1a\xdd\x68\xea\xe9\xb6\x2d\x2d\x31\x96\xdd\xea\xda\x65\xfb\x8e\x09\x02\xad\xec\x82\x3f\xf4\x22\x81\xcc\xde\x2e\x71\xa6\x8d\x4c\x18\xef\xcb\xdd\x2b\xf8\x5a\xdb\xad\xae\x6a\x23\x9d\x1c\x1c\x69\x45\x3b\x02\x7d\x4c\x9c\xd9\xa3\xff\xf9\xfd\x1f\x9e\xfc\x27\x16\x7f\x17\x5d\xe1\xe1\x2a\x16\x61\x77\xbc\x3e\xef\xde\x68\x5e\x29\xd1\x14\xe3\xde\x31\x37\xff\xad\x67\x5d\x37\x80\x08\x7a\xfe\x25\xb8\x52\x89\x85\x76\x04\x07\x0a\x1e\xd4\xf0\xde\x36\xea\x50\x6a\xc5\xb6\x75\xf2\xef\x1a\xe6\xfb\x6f\x86\xf9\x6c\x98\x83\xb7\x68\x98\xf4\x96\x1c\x73\x78\xbc\x63\xbe\x6f\x77\x4c\xd9\xfc\x21\xf6\xcd\x39\xdf\xb8\x73\xb6\xdb\xe1\xd7\x5b\x67\x88\x73\x98\x6c\x3d\x64\xf3\x9a\x01\xeb\xc6\x1b\x30\x92\x12\xce\x86\xe2\xfe\x09\x94\x43\x25\x46\x07\x0d\xa4\xd7\xc4\x80\x4a\xbc\x7b\xb7\x81\x26\xb4\xf1\x81\x4b\xa7\x89\xae\xab\x96\x4b\x62\xf0\xd2\xb8\x22\x63\xa5\x41\xcb\xd6\x68\xd7\x39\x44\xfe\xe6\x2e\x9f\x19\x93\x47\x57\xe5\xda\xf3\xbe\xd8\xf3\x9e\xe4\xe8\x00\x1f\x14\xb3\xf5\x3a\x85\xc5\x02\x0c\x2b\x71\x1d\x27\x66\x05\xf3\x62\x6b\x6c\x6b\x28\xd5\x81\xcf\xac\xa1\x63\xca\x05\x22\x2a\x31\xbe\xb7\xc4\x8f\x52\xa8\x14\xb7\xe7\x49\x7c\x40\x3e\x04\x06\x81\xb7\x35\x5a\xed\x5d\x1f\x0e\x7f\xf0\x8c\x85\x5d\x5e\xe9\xb4\x9d\xe1\xb5\x8a\x79\x19\xf7\x77\x00\x00\x00\xff\xff\xc2\x56\x88\xde\xbc\x11\x00\x00")

func assetsMetricStateDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsMetricStateDeploymentYaml,
		"assets/metric-state/deployment.yaml",
	)
}

func assetsMetricStateDeploymentYaml() (*asset, error) {
	bytes, err := assetsMetricStateDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/metric-state/deployment.yaml", size: 4540, mode: os.FileMode(0644), modTime: time.Unix(1623161756, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xab, 0x4, 0x75, 0x34, 0xe8, 0x40, 0xa1, 0x98, 0xf3, 0x49, 0xd7, 0xea, 0xf0, 0x9b, 0xe2, 0x61, 0xa3, 0x48, 0xe9, 0x54, 0x40, 0x5c, 0x3d, 0x75, 0xad, 0x7a, 0x9e, 0x2c, 0xef, 0x68, 0x12, 0x54}}
	return a, nil
}

var _assetsMetricStateServiceMonitorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x53\x4d\x8f\xd4\x30\x0c\xbd\xcf\xaf\xf0\x1f\x48\x2b\x38\xa1\x5e\x91\x38\x2d\x5c\x58\x71\x77\xdd\xc7\x34\x4c\x62\x47\x8e\x3b\xbf\x1f\xb5\x1d\xd0\x72\x58\xa4\x95\xb8\x70\x73\x5e\xfc\xf1\xfc\x92\xc7\x2d\x7f\x83\xf7\x6c\x3a\x51\x35\xcd\x61\x9e\xf5\x3a\x88\x39\xac\x0f\x62\x75\xbc\xbf\xbb\xdc\xb2\x2e\x13\x7d\x85\xdf\xb3\xe0\xf3\x99\x75\xa9\x08\x5e\x38\x78\xba\x10\x15\x9e\x51\xfa\x1e\x11\x71\x6b\xc3\x6d\x9b\xe1\x8a\x40\x1f\xb2\x8d\x62\xb5\x99\x42\x63\x22\x31\x0d\xb7\x52\xe0\xaf\xe4\x2a\x57\x4c\xe4\x6b\x4d\x15\xe1\x59\x52\x0f\x0e\x5c\x88\x5e\xb9\xe8\x0d\xb2\xcf\x85\x2e\xcd\xb2\xc6\x41\x22\xd1\x0c\x76\xf8\xb3\xdd\xa0\x9f\x72\xc1\x44\xe3\x9d\x7d\xf4\x4d\xc7\x0e\x71\x44\x1f\xff\x1c\xdb\xcf\xdd\x58\xc4\x36\x8d\x31\xf6\xc2\x83\xe1\x6a\x6a\xfe\x74\xae\x47\xe1\x1b\x0e\x34\x6b\xc0\xef\x5c\x26\x7a\x5f\x0f\xa0\x99\xc7\x44\x6b\x44\xeb\xc7\xb9\xcb\x8a\x9d\xef\x4b\xc4\xb9\xe1\x39\x57\xd8\x16\xbf\xeb\xa2\xf4\x8f\xa6\xdf\xf3\xf5\xd4\x8e\x48\xf8\xc1\x17\x21\x63\x73\xab\x88\x15\x5b\x1f\xe5\xc8\xaa\xdc\xfa\xc9\x55\xaf\x49\xe0\xd1\x93\x70\x9a\x37\x5d\x0a\x7e\xed\x90\x84\x07\xf1\x78\xf4\xdb\x41\xf8\x97\x43\xbc\x33\x4e\xbb\x92\xc9\xd1\x0a\x0b\x96\xc4\x91\x7c\xd3\xc8\x15\xff\x56\xb8\xbf\x49\xf4\x78\xc2\xff\x5a\xaa\x1f\x36\x1f\xdf\x62\xa2\xdb\x87\x9e\xb8\xb5\xcb\xde\xa1\x40\xc2\xfc\x64\x58\x39\x64\x7d\x7a\xe1\x8c\xb7\x79\xe3\x0d\xee\xf8\x19\x00\x00\xff\xff\x74\xfb\x99\x7d\xc5\x03\x00\x00")

func assetsMetricStateServiceMonitorYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsMetricStateServiceMonitorYaml,
		"assets/metric-state/service-monitor.yaml",
	)
}

func assetsMetricStateServiceMonitorYaml() (*asset, error) {
	bytes, err := assetsMetricStateServiceMonitorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/metric-state/service-monitor.yaml", size: 965, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x62, 0x96, 0xa0, 0x1b, 0x1d, 0xe6, 0x7f, 0xfe, 0xa9, 0xca, 0x1b, 0x9f, 0x4d, 0xe2, 0xc7, 0x33, 0x99, 0x5, 0x38, 0x3b, 0x2b, 0x94, 0x4c, 0xd, 0xff, 0xf8, 0x52, 0xfb, 0x86, 0xb1, 0xc7, 0x26}}
	return a, nil
}

var _assetsMetricStateServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x91\xbd\x6e\x02\x31\x10\x84\x7b\x3f\xc5\xbe\x80\x2f\x7f\x15\xee\xa2\x54\x74\x48\x91\xd2\x1b\x33\x80\x85\x6f\x6d\x79\x07\x24\xde\x3e\x3a\x38\x29\x89\x92\x2b\x53\x7a\x76\x66\x3e\xdb\x1b\x5b\xfe\x40\xb7\x5c\x35\xc8\xe5\xc9\x9d\xb2\xee\x82\xbc\xa3\x5f\x72\x82\x1b\xc1\xb8\x8b\x8c\xc1\x89\x44\xd5\xca\xc8\x5c\xd5\xa6\xa3\x88\xdd\x4d\xc3\x16\x8c\x43\x6d\x50\x3b\xe6\x3d\x87\x5c\x1f\x6e\x13\x3d\xf8\x84\x4e\x6f\x48\x1d\xf4\x1a\x47\x04\xe9\xc7\xd1\x8f\x60\xcf\xc9\x1b\x23\xe1\x59\xcc\x89\x94\xb8\x45\x99\x6b\x63\x6b\xc3\xe9\xbc\x45\x57\x10\x36\xd5\xa5\x3a\xb6\xaa\x50\x06\x49\x55\xd9\x6b\x29\xe8\x0b\xde\xbf\x31\x4e\x64\x81\x3f\x3f\xc2\x59\x43\x9a\xf8\xad\x76\xce\x17\xf1\x73\xe6\x48\x36\xbb\x29\xf7\x71\x90\xd5\xe3\xea\x79\x16\x18\xfb\x01\xdc\xdc\xe4\x2f\xe3\x8f\xe8\x0c\xfc\x55\xf1\xb2\x54\xf1\x2d\x60\x28\x48\xac\xfd\x5f\xbf\xc6\x60\xd3\xfe\x5f\xf7\xfb\xac\x99\xd7\x20\x6f\x25\x43\xb9\xde\x38\x11\x5e\x1b\x26\xe1\x6c\x44\x5f\x6f\xdc\x67\x00\x00\x00\xff\xff\xe0\x0f\xf0\x12\x2f\x02\x00\x00")

func assetsMetricStateServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsMetricStateServiceYaml,
		"assets/metric-state/service.yaml",
	)
}

func assetsMetricStateServiceYaml() (*asset, error) {
	bytes, err := assetsMetricStateServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/metric-state/service.yaml", size: 559, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc, 0xf3, 0x41, 0xe1, 0xb, 0xf2, 0x42, 0x97, 0x1c, 0xad, 0xdc, 0xee, 0xa3, 0xc8, 0x30, 0x74, 0xa6, 0x4a, 0xf7, 0x8f, 0x11, 0x4b, 0x40, 0xdc, 0xb3, 0xac, 0x3e, 0x4c, 0x4c, 0xb5, 0x32, 0x29}}
	return a, nil
}

var _assetsPrometheusAdditionalScrapeConfigsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xc9\x31\x0a\x82\x31\x0c\x05\xe0\x3d\xa7\xc8\x05\x3a\xb8\xf6\x1a\x82\xfb\xb3\x7d\x6a\xd0\xa6\x3f\x49\x70\x11\xef\x2e\x38\x7f\x38\xec\xc2\x48\xdb\xde\xf5\x7d\x92\x89\x42\xd7\xcf\x57\x9e\xe6\xb3\xeb\x99\x23\x58\xb2\x58\xf8\x8b\xa8\x3a\x16\xbb\xc6\x63\xb5\xc5\x62\x5c\x91\x6c\x98\xd3\xca\xb6\xe3\xd5\x72\x04\x0e\xb6\xb1\xfd\x66\xf7\x94\x5f\x00\x00\x00\xff\xff\x49\x3e\x20\xcd\x5f\x00\x00\x00")

func assetsPrometheusAdditionalScrapeConfigsYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusAdditionalScrapeConfigsYaml,
		"assets/prometheus/additional-scrape-configs.yaml",
	)
}

func assetsPrometheusAdditionalScrapeConfigsYaml() (*asset, error) {
	bytes, err := assetsPrometheusAdditionalScrapeConfigsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/additional-scrape-configs.yaml", size: 95, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x0, 0x63, 0x5, 0x23, 0x5a, 0x8d, 0x6d, 0x73, 0xc1, 0x2c, 0x3, 0x6e, 0x80, 0x55, 0xdf, 0x9, 0x8, 0x9e, 0x3a, 0x7b, 0x1, 0x64, 0x41, 0x76, 0xd0, 0x71, 0x11, 0x2b, 0x85, 0x26, 0xe6, 0x5e}}
	return a, nil
}

var _assetsPrometheusHtpasswdSecretYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xca\x31\x0a\x02\x31\x10\x85\xe1\x7e\x4e\xf1\x2e\x90\xc2\x4e\x72\x09\x0b\xc1\x7e\xd6\x7d\x90\xb0\x9b\xec\x98\x99\x55\x44\xbc\xbb\x68\x6f\xf7\xc3\xff\xa9\xd5\x0b\x87\xd7\xad\x67\xdc\x0f\x32\x6b\x68\xc6\xeb\x2d\x4b\xed\x73\xc6\x99\xd7\xc1\x90\xc6\xd0\xdf\x11\x60\xd5\x89\xab\x7f\x0b\x58\x8e\x9e\xd4\x2c\x63\x94\x96\x6c\x6c\x8d\x51\xb8\x7b\x6a\x0c\x8e\x49\x9d\x02\x74\x6d\xfc\x0f\x52\x09\x53\xf7\xc7\x2c\xf1\x34\x66\x9c\x4c\x6f\x3b\xe5\x13\x00\x00\xff\xff\x12\xe6\xd6\x91\x96\x00\x00\x00")

func assetsPrometheusHtpasswdSecretYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusHtpasswdSecretYaml,
		"assets/prometheus/htpasswd-secret.yaml",
	)
}

func assetsPrometheusHtpasswdSecretYaml() (*asset, error) {
	bytes, err := assetsPrometheusHtpasswdSecretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/htpasswd-secret.yaml", size: 150, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc0, 0xff, 0x20, 0xc8, 0x4c, 0x89, 0x62, 0x43, 0x54, 0x98, 0x2b, 0xef, 0x84, 0x2d, 0x33, 0x8, 0xd9, 0x2e, 0x72, 0x58, 0x86, 0x7, 0xa6, 0x29, 0x80, 0x9f, 0xdb, 0xc3, 0x4d, 0xc3, 0x79, 0x31}}
	return a, nil
}

var _assetsPrometheusKubeRbacProxySecretYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x90\xcb\x8e\x9b\x30\x14\x40\xf7\x7c\x85\x7f\x80\x2a\x24\x4d\x35\x83\x34\x8b\x49\x24\xc0\xb4\x10\x29\x51\x0c\x78\xe7\xc7\x2d\x98\xd8\xc6\xe5\x95\xd2\xaf\xaf\x48\x1a\x75\x67\xe9\xf8\xdc\x73\x75\x99\x53\x04\xfa\x41\x75\x36\x44\x73\xe0\x49\x36\xb2\xd0\x43\x48\x74\xf6\xa7\xaa\xbf\x2c\xcc\xe8\x10\x61\x13\x05\x32\x6e\x66\x61\xf4\xb7\xaa\x3c\x3b\xbe\xfd\xaa\x4e\x75\x57\xe3\x63\xba\xd0\x32\x9f\x65\x99\xb6\xf4\x1a\x6d\x64\x92\xba\xca\x92\x0d\x2d\xb3\x7f\xfc\xb3\xc6\x26\xba\x33\x42\xb5\xb0\xf9\xd3\x53\x9f\x8a\x17\x64\x23\x8c\x6e\xc5\xb2\xef\x4f\x49\x36\xb1\xe2\x6d\x96\x6d\xa4\x68\x79\x6e\xb2\x0b\xfe\xfe\xf0\x8e\xe9\x54\x15\x81\x16\xbb\x43\x53\x6d\xaf\x0f\x0f\x76\x43\xfd\x43\xd3\x86\x27\x44\xe3\x24\x78\xc7\xaf\x86\x4d\xb5\xd8\xbe\x07\xc2\xe4\x1a\xb7\x5d\x8d\xed\x61\xa6\x49\xa6\x8e\xea\xc9\xe4\x2e\x75\x32\x26\x7f\x70\xdb\xbd\x66\x2b\x20\x51\x40\xcb\x74\x7f\x8d\xa3\x65\xed\xc8\x98\x2c\xff\xf9\xba\xf7\xbe\xe1\xc5\xb3\xcb\x4d\x34\xd2\x32\xbf\x57\x45\xae\x71\xfd\xf1\xe1\xdd\x94\x95\x21\xba\x80\xe8\x61\xf4\x0c\x8c\xec\x75\x36\xcd\x38\xe8\x61\x7d\x21\x74\x7b\x1b\x7c\xe6\x5c\x88\xfa\xc6\xf8\xae\xef\x0c\x8c\x0d\x4c\x83\x6f\x60\x84\x9e\xb3\x01\x3c\x84\x2c\x33\x10\xa2\xdb\xc4\xc1\xef\x39\x13\xeb\xb7\xdf\x8b\x37\x2e\x0e\x42\x74\x72\xec\xd7\x04\xde\xdf\x00\x00\x00\xff\xff\x6d\xa5\xc6\x38\xa1\x01\x00\x00")

func assetsPrometheusKubeRbacProxySecretYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusKubeRbacProxySecretYaml,
		"assets/prometheus/kube-rbac-proxy-secret.yaml",
	)
}

func assetsPrometheusKubeRbacProxySecretYaml() (*asset, error) {
	bytes, err := assetsPrometheusKubeRbacProxySecretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/kube-rbac-proxy-secret.yaml", size: 417, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x69, 0x6d, 0x4, 0x4d, 0xdc, 0x7d, 0xd6, 0x82, 0x2b, 0xe1, 0x29, 0x56, 0xc3, 0xf3, 0x61, 0x74, 0xdc, 0x31, 0x75, 0x22, 0x24, 0xbb, 0xa4, 0x63, 0xc, 0x21, 0xe9, 0x99, 0xcc, 0x39, 0xbf, 0x6d}}
	return a, nil
}

var _assetsPrometheusKubeStateServiceMonitorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x93\x41\xab\xd5\x30\x10\x85\xf7\xfd\x15\xe1\xed\xd3\xa2\x2b\xe9\x56\x10\x84\xa7\x1b\x1f\xee\xa7\xd3\xf3\x6e\x63\x93\x4c\x98\x4c\x2f\xf8\xef\x25\xe9\xbd\x22\x22\x17\x04\x37\xee\xc2\xe1\xcc\xe4\x9b\x93\x0c\x95\xf0\x15\x5a\x83\xe4\xd9\x25\xc9\xc1\x44\x43\xbe\x8c\x2c\x0a\xa9\x23\x4b\x9a\xae\x6f\x86\x3d\xe4\x75\x76\x5f\xa0\xd7\xc0\xf8\x74\xba\x86\x04\xa3\x95\x8c\xe6\xc1\xb9\x48\x0b\x62\x6d\x27\xe7\x12\xe9\x0e\x2b\x91\x18\xa3\x62\xdd\xc8\x7a\x9b\x15\x25\xca\x77\xac\xb3\x7b\x32\x3d\xf0\xf4\xc8\x9b\x60\xd0\xbf\xb2\x8e\x27\xe2\xc7\x6c\xd0\x4c\xf1\x37\x54\xe7\x32\x25\xcc\x6e\x3f\x16\xf8\x6a\x64\xf0\x09\xa6\x81\xeb\x50\x0b\xb8\x71\x23\xaf\x45\x42\xb6\x3e\x84\x77\x0b\x48\xa1\x2f\xb2\x23\x7f\x08\x11\xb3\x9b\xae\xa4\x93\x1e\x79\xaa\x60\x85\xd5\xa9\xf5\xd2\x0c\x43\x1d\x83\x4c\xf5\xbc\x90\x98\xe5\xc8\x36\x59\x2b\xec\xd8\x9b\x64\xd1\xe7\x33\x1e\xd7\xa6\xe9\x6a\x68\x9c\x57\x8a\xb3\x7b\x9b\xba\x50\x44\x6d\x76\x9b\x59\xa9\x3e\x51\x38\x6b\x2b\x6f\x68\xd8\x5d\xbe\x29\x4a\x05\x2f\x21\x41\x0e\xfb\x59\x6c\xb1\xbe\x97\xfc\x1a\x2e\xe7\x03\x38\xc7\x74\x83\x86\xf1\x54\x54\x12\x6c\xc3\x51\x27\xee\xae\x44\xa5\x9e\xc0\xf9\xe2\x19\x6a\xd5\x33\xf9\xe5\xc8\x6b\xc4\x7d\x10\xcf\x34\xb2\xda\xad\x5f\x13\xa1\x9f\x7b\x86\xe7\xd9\xb7\x40\xbd\xa2\xbf\xc7\xea\xc9\xbc\x1e\xd9\x42\xc2\xbf\x4d\xef\x61\x4e\x15\xf1\xf5\x7f\xce\xe9\x9b\x2c\xfd\x63\xcc\x6e\x7f\x57\x3d\x95\x32\xb4\x0e\x11\x6c\xa2\xf7\x55\x32\xde\x9e\x7f\xd9\x2d\x77\xb7\xfe\xf1\x2f\xff\x08\x00\x00\xff\xff\x14\x46\xa1\xb2\xcc\x03\x00\x00")

func assetsPrometheusKubeStateServiceMonitorYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusKubeStateServiceMonitorYaml,
		"assets/prometheus/kube-state-service-monitor.yaml",
	)
}

func assetsPrometheusKubeStateServiceMonitorYaml() (*asset, error) {
	bytes, err := assetsPrometheusKubeStateServiceMonitorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/kube-state-service-monitor.yaml", size: 972, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5a, 0xfc, 0x45, 0x17, 0xce, 0xc2, 0xc3, 0x6a, 0x44, 0xec, 0x43, 0xc8, 0x48, 0xe, 0x3, 0xbd, 0x9b, 0x3e, 0xe2, 0x3, 0xd9, 0x95, 0x9c, 0x2, 0xdd, 0x5c, 0x3f, 0x99, 0x6f, 0xcf, 0xe7, 0x64}}
	return a, nil
}

var _assetsPrometheusKubeletServingCaBundleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xa1\x0e\x03\x21\x0c\x00\x50\xdf\xaf\x68\xce\xb3\x64\xb6\x76\x7a\x76\xbe\x77\x74\xa4\x01\x0a\x81\xc2\xf7\x4f\xed\xfc\xcb\xe3\xae\x1f\x19\x53\x9b\x11\xee\x27\x44\x76\x26\x40\xbc\x38\x9c\xcb\x62\x91\xc7\x35\x9c\xf0\x38\x20\xab\x45\xc2\x57\xb3\xaf\xa6\x37\x77\xa8\xe2\xfc\xd7\xc6\x55\x08\xf3\x3a\xa5\x88\x87\x29\x63\xab\xa5\x70\x1f\xf0\x0b\x00\x00\xff\xff\x86\x09\x45\x3a\x65\x00\x00\x00")

func assetsPrometheusKubeletServingCaBundleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusKubeletServingCaBundleYaml,
		"assets/prometheus/kubelet-serving-ca-bundle.yaml",
	)
}

func assetsPrometheusKubeletServingCaBundleYaml() (*asset, error) {
	bytes, err := assetsPrometheusKubeletServingCaBundleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/kubelet-serving-ca-bundle.yaml", size: 101, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe2, 0x5a, 0x8e, 0x4b, 0x57, 0xe4, 0x1b, 0x25, 0x7a, 0x40, 0x5d, 0x99, 0xe6, 0x4b, 0x36, 0x7c, 0x9e, 0x23, 0xd6, 0x91, 0x5a, 0xe0, 0xf2, 0xf4, 0x22, 0xf2, 0x34, 0x60, 0x7d, 0x9c, 0xfd, 0x4e}}
	return a, nil
}

var _assetsPrometheusPrometheusAdditionalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x6f\xdb\x46\x10\xbd\xeb\x57\x0c\x12\x23\xb6\x61\x8b\x8c\xdb\x1c\x02\xb6\x68\x2e\xbd\x14\x68\xd1\x02\xcd\x2d\x75\x37\xa3\xdd\xa1\xb8\x31\xb9\xcb\xce\x0c\xe5\x18\x6d\xff\x7b\xb1\x4b\xca\xa2\x6b\x19\x96\x83\xb6\x48\x4f\x82\x76\x77\xde\xbc\x37\x1f\x4f\x7a\xfe\x1c\x96\x4b\xf8\x01\x6f\x20\x10\x39\xd0\x08\x2b\x02\xe7\xeb\x1a\xea\xc8\x60\xd9\x96\xb1\xa7\x20\x8d\xaf\x75\xb1\x84\x0f\x71\x65\x02\x76\x54\xc1\xf1\xd5\xb0\xa2\xa5\x28\x2a\x2d\x3b\x52\xf6\x56\x8e\x17\x00\xe9\xc0\x5b\x63\x63\xa8\xfd\x5a\xaa\x05\x00\xc0\x12\x14\x79\x4d\x2a\x15\xbc\xdb\x13\x56\x8c\x47\x37\xa2\xd4\x15\xb2\xb1\x85\x6d\x07\x51\xe2\xa2\x8d\x16\xdb\xea\xf5\xcb\xd7\x2f\x8f\x2f\x17\x99\xe7\x7d\x06\x1c\x48\x49\x96\x21\x3a\x92\xa5\x45\xb7\xf1\x12\x39\x11\x79\x0e\xdf\x52\x8d\x43\xab\x49\x92\x58\xc6\xde\x87\x35\xc4\x0d\x31\x34\xaa\xbd\x14\xf0\x5d\x0d\x4c\xbf\x0d\x9e\xc9\x9d\xc3\x87\x41\x14\x9c\x17\x5c\xb5\x04\xda\x78\x81\xa4\xbe\xc1\xb0\x26\xd0\x98\xf1\xde\xa7\xb8\xf7\x45\x12\x69\x1b\x4a\x0c\x32\x50\xbe\x7b\x9b\x22\xde\x7e\xff\x33\xbc\x80\x15\x21\x13\x83\xc6\x2b\x0a\x50\xfb\x96\x60\x2c\x06\x78\x81\x41\xc6\x12\xdb\x18\x02\xd9\x4c\x4d\x1b\x02\xb4\x3a\x60\x3b\xb2\xa4\x8c\x47\xc1\xf5\xd1\x07\x95\xb1\x0b\x63\x41\xc0\xc6\xae\x8f\x81\x82\x4a\x31\x66\xf4\x02\x42\x3d\x32\x6a\x62\x99\xf8\xdb\xa4\xf0\x06\x70\xd0\x26\x03\x8d\xb9\x07\x46\xf5\x31\xc0\x8a\x2c\x0e\x42\xb3\x87\x2f\x76\xb5\x41\x26\xd0\xeb\xb8\x43\xb4\x31\x58\xe2\x20\xe0\x43\xc6\xfa\x89\x63\x47\xda\xd0\x90\xd3\xd3\xdf\xd2\xcd\x64\xe2\xa0\xb1\x4b\x73\x00\xbe\x9e\x45\x01\x0f\x19\x4c\xbc\x1b\x55\x26\xed\xdb\x66\xc3\x8f\xda\x10\x5f\x7b\xa1\x73\xe8\x22\xdf\x56\x2d\xf6\x89\xb9\x40\x83\x1b\x9a\xa6\xb3\xe7\xb8\xf1\x8e\x1c\x5c\x7b\x6d\x7c\x48\x30\x19\xee\xeb\xdd\x40\x18\x71\xd3\x0c\x7e\x93\x1a\xa6\xad\x4c\x5f\xc7\x89\xb4\x68\x52\x67\x2a\x28\x37\xc8\x25\x0f\xa1\x14\xb2\x4c\x2a\xe5\x0e\xa2\xf0\xb1\x14\xe2\x8d\xb7\x84\xd6\xc6\x21\x68\x69\xb1\xb0\xac\x0b\x98\x7a\x6c\x72\x8f\x3f\x09\x29\x47\x2e\x00\xf6\x31\xce\x5b\xb3\x04\x8e\x09\x36\x0d\xf6\x02\x80\xa9\xc5\x15\xb5\x77\x5f\xa0\x4d\xa5\xa9\x20\x5f\x75\xd8\x67\x69\x4c\x6b\xfa\x58\x81\x31\x1d\x29\x9a\x19\x7e\x42\x32\x23\xca\x49\x71\x76\xba\xd8\xed\xe5\x78\x9a\x62\xd0\x39\x26\x11\x63\x26\xa8\xbe\x45\x4b\x1d\x05\xad\x66\x4c\x0b\x37\x2e\x56\xda\xd5\xea\xd5\xab\x2f\x33\x92\xc4\x81\xed\x84\x9f\xf6\xfc\x81\xfc\x69\x73\x2f\xe7\x3c\x27\x2a\x70\x8f\xca\x64\x0e\xa6\x47\x6d\xf6\xf1\x29\xb1\xf7\xe5\xe6\xa2\xcc\x9b\x5f\x1e\xfd\x7e\xf1\x67\xd9\x73\xfc\x78\x53\x4e\x81\xe5\xd6\x0c\xee\x78\xc6\x33\x6e\x3a\xb3\xa6\x40\xec\xad\x19\xf7\xcd\xf4\xd1\x3d\x3b\xa4\x15\x7d\x74\x0f\x75\xe2\x71\xf5\x7d\x74\x53\xf1\x3b\xe4\x2b\xd2\xac\xc4\x30\xb9\x06\xd5\xd8\xd8\xa5\x00\x62\x72\x63\x71\xb6\x9d\xbd\x22\xba\xd3\x55\xe5\x81\xfe\xc1\x84\xa9\x08\xa9\xbe\x77\x93\x4e\x65\x3e\xbc\x2b\xf3\x46\xee\xa3\x76\x3b\x55\xe7\x7b\xc6\xf2\x60\x9e\x91\xf5\x61\x9e\x5b\x12\xef\x7e\xad\x2e\xcf\x4e\x4f\xde\x54\xd5\x2f\xee\xec\xf4\xcd\x57\x27\xe9\xe3\xfe\xf0\x1c\x5d\x54\x47\x5f\xec\x15\x38\xdf\x80\xa7\x6e\xd8\xa3\x52\x1e\x18\xf6\xe9\xc5\x3c\xe8\xe8\xe2\xd0\xad\xc2\x8e\xa4\x47\x4b\x87\xf6\x70\x5f\xec\x13\x46\x6a\xb7\xc0\x4f\x4a\xb5\x0d\xcd\x3e\xbd\x2f\x57\xba\x34\xe6\x32\xdf\xdf\x96\xf8\xf8\xc4\xc6\xa0\xe8\x43\xf2\x5a\x94\x2b\x31\xf9\x8f\xc3\x1f\xbb\xd3\x8e\xba\xc8\x37\xa6\x46\xdf\x0e\x4c\x62\x34\x2a\xb6\xa7\xe3\xef\xff\xdd\x2d\x7a\xcc\x05\x26\x83\xfe\xf7\x9d\x60\x4a\xf4\xdf\xba\xc1\xa1\x49\x3f\x07\x47\x78\x12\xd7\xcf\xdf\x15\x0e\x92\xf3\x3f\x77\x86\xad\xc6\x4f\x74\x87\x79\xf8\xe2\xaf\x00\x00\x00\xff\xff\x6d\x42\x9b\xe2\x91\x0c\x00\x00")

func assetsPrometheusPrometheusAdditionalYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusPrometheusAdditionalYaml,
		"assets/prometheus/prometheus-additional.yaml",
	)
}

func assetsPrometheusPrometheusAdditionalYaml() (*asset, error) {
	bytes, err := assetsPrometheusPrometheusAdditionalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/prometheus-additional.yaml", size: 3217, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd7, 0x0, 0xb, 0x39, 0x31, 0xea, 0xc9, 0x64, 0xaa, 0x17, 0x3d, 0xfc, 0x8b, 0x85, 0xc4, 0x48, 0x5d, 0xb8, 0x7e, 0x9d, 0x48, 0x41, 0x63, 0xd9, 0x81, 0xac, 0xd5, 0x8e, 0x25, 0x56, 0xde, 0x7e}}
	return a, nil
}

var _assetsPrometheusPrometheusDatasourcesSecretYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xc9\x31\x0a\x42\x31\x0c\x06\xe0\x3d\xa7\xc8\x05\x3a\xb8\xe6\x12\x0e\x82\x7b\x6c\x7f\xb0\x48\xda\x9a\xa4\x82\xb7\x7f\x3c\xde\xfa\x7d\xba\xfa\x13\x1e\x7d\x0e\xe1\xdf\x8d\x9a\xa6\x0a\x7d\xfa\x68\xc2\x0f\x54\x47\x92\x21\xf5\x62\xe6\xa1\x06\x61\x7f\x5b\x31\x24\xfc\xa5\x81\x72\x5e\xcc\xed\x15\x41\xf9\x5f\x10\xbe\x2f\xfd\x6e\xd0\x11\x00\x00\xff\xff\x2f\x2c\x4d\x6e\x5b\x00\x00\x00")

func assetsPrometheusPrometheusDatasourcesSecretYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusPrometheusDatasourcesSecretYaml,
		"assets/prometheus/prometheus-datasources-secret.yaml",
	)
}

func assetsPrometheusPrometheusDatasourcesSecretYaml() (*asset, error) {
	bytes, err := assetsPrometheusPrometheusDatasourcesSecretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/prometheus-datasources-secret.yaml", size: 91, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xaa, 0xac, 0xbe, 0x97, 0x80, 0xa0, 0x55, 0xa3, 0x7, 0xee, 0x1e, 0xb0, 0xe8, 0x18, 0x8e, 0xb9, 0xac, 0xa4, 0x10, 0xa0, 0xac, 0x7b, 0xa1, 0x71, 0x6f, 0xce, 0xf8, 0x1, 0xfd, 0xf2, 0x1a, 0xa0}}
	return a, nil
}

var _assetsPrometheusPrometheusRulesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x41\x4e\xc3\x30\x10\x45\xf7\x3e\xc5\x5f\xb6\x8b\xa4\x62\xeb\x53\x20\x84\xd8\x56\x4e\xf2\x95\xba\xd8\x1e\x33\x63\xa3\x72\x7b\xd4\x10\x10\x9b\xee\x46\xa3\xf7\x9e\x7e\xa8\xf1\x8d\x6a\x51\x8a\x47\x96\x12\x9b\x68\x2c\xeb\x38\x8b\x52\x6c\x9c\x25\x9f\x3e\x9f\xdc\x7b\x2c\x8b\xc7\xb3\x4a\x66\xbb\xb0\xdb\x4b\x4f\x74\x99\x2d\x2c\xa1\x05\xef\x80\x59\x19\x5a\x94\xf2\x1a\x33\xad\x85\x5c\x3d\x4a\x4f\xc9\x01\x29\x4c\x4c\x76\x67\x80\xfa\x17\xf0\xe0\x2d\xe4\x9a\xb8\xfd\x55\x12\x3d\x42\xa2\xb6\x41\x7b\xa2\x39\xa0\x84\x4c\xff\xcf\x18\x76\x61\x07\xac\x72\xbe\x47\x57\x95\x5e\xb7\xfc\xb0\x2b\xe3\x69\x27\xc7\xdf\x14\xb0\x5d\x3f\x1b\x06\x28\x67\xd1\xc5\xe3\x2a\x93\xbf\xb4\x56\xcf\xb1\x54\x95\x55\x69\x76\x56\x7e\x74\x5a\x33\x6f\x3d\x6f\x38\xc0\x5b\x55\x0f\xeb\xf9\xf0\x08\x3e\x62\xfa\xc2\xe1\x2a\xd3\xd1\x7d\x07\x00\x00\xff\xff\x78\x3d\x62\x0e\x4e\x01\x00\x00")

func assetsPrometheusPrometheusRulesYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusPrometheusRulesYaml,
		"assets/prometheus/prometheus-rules.yaml",
	)
}

func assetsPrometheusPrometheusRulesYaml() (*asset, error) {
	bytes, err := assetsPrometheusPrometheusRulesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/prometheus-rules.yaml", size: 334, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe5, 0xc7, 0x2b, 0x5d, 0x31, 0x65, 0x71, 0xa8, 0x2f, 0xac, 0xbc, 0xec, 0xd2, 0x43, 0x25, 0x59, 0x93, 0xc9, 0x12, 0x4b, 0x16, 0x22, 0xc0, 0x46, 0x94, 0xed, 0xab, 0xfe, 0xf8, 0x6d, 0x57, 0x5b}}
	return a, nil
}

var _assetsPrometheusPrometheusYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x5b\x6f\x22\x3b\x12\x7e\xe7\x57\x58\xbc\x20\xad\xc6\x34\xb0\x93\x9d\x99\x96\x78\x60\x08\x9b\x44\x9b\x0b\x1a\xa2\xdd\x3d\x2f\x07\x19\x77\xd1\x58\xb8\xed\x3e\x65\x37\x13\x4e\x34\xff\xfd\xc8\xee\x0b\xdd\xd0\x09\x89\xe6\x65\x4e\x9e\x82\xab\xea\xeb\x72\x5d\xbe\xb2\xcd\x52\xf1\x5f\x40\x23\xb4\x0a\x49\xa2\x95\xb0\x1a\x85\x8a\xfb\x5c\x23\x68\xd3\xe7\x3a\x09\x76\xc3\xce\x56\xa8\x28\x24\x73\xd4\x09\xd8\x0d\x64\xa6\x93\x80\x65\x11\xb3\x2c\xec\x10\xa2\x58\x02\x21\x49\x2b\x21\x4d\xc0\x02\xae\x98\x81\x0e\x21\x92\xad\x40\x1a\xa7\x46\x6a\x2a\x21\x41\x88\x36\xcc\xd2\x84\xe1\x16\x6c\x2a\x19\x07\xaf\x52\xfb\xdd\xcf\x55\xbc\x0b\x1e\x51\xa8\x38\x24\x16\x33\xe8\x98\x14\xb8\x83\x64\xeb\xb5\x50\xc2\xee\x0b\x78\x1d\x4d\x94\x15\x93\xc6\xa2\xfb\x2a\xac\x01\x11\xa2\xcb\xcc\x41\x2c\xf8\x06\xa2\x4c\x0a\x15\xdf\xc4\x4a\x57\xcb\xb3\x27\xe0\x99\x75\x51\x28\xcc\x08\xa1\x1e\xb1\x40\x7b\x04\x4c\x0e\x22\xf7\xe7\x77\xb6\x00\x09\xdc\x6a\x6c\x8a\xdc\x3e\x2c\xdf\xcc\x9e\x52\x04\xe3\x42\x6b\x8e\xe5\x0e\x7d\x0b\xfb\x7a\xd8\x4e\x34\x08\xd1\x29\x20\x73\xe8\xe4\x46\xb5\x88\x77\x4c\x66\xd0\x02\x5d\xc0\x7f\x6e\x42\xba\x34\x99\x94\xf1\x53\x0b\xfa\x52\x36\xca\x3f\xab\x53\x2d\x75\xbc\xff\x8f\xf3\x78\x9b\xad\x00\x15\x58\x30\x7d\xa1\x83\x8d\x36\xd6\x21\xd7\xf4\xbf\x83\x88\x37\x36\x24\xc3\xc1\xa0\x43\x08\xd7\xca\x32\xa1\x00\x8b\xcf\x52\x22\x12\x16\x43\x5b\x05\x50\x96\xd9\x0d\xdf\x00\xdf\x86\x92\x59\x30\xb6\x73\xf0\x3c\x24\x95\xb0\x58\x45\x30\x3a\xc3\xc6\x76\x10\xfe\xc8\xc0\xd8\xc6\x06\x79\x9a\x39\x57\x92\xda\x52\x02\x89\xc6\x7d\x48\x46\x83\x3b\x51\x2d\x4b\x91\x88\x16\xcb\x51\xab\xe5\xc7\x83\xa5\x05\x4c\x84\x62\xae\x74\xee\xc0\x18\x16\xc3\x5c\x4b\xc1\xf7\x21\xf9\x37\x93\x72\xc5\xf8\xf6\x51\xdf\xea\xd8\x3c\xa8\x19\xa2\xc6\x22\x06\x0c\x63\x53\xaf\x34\x9a\xa2\xde\x89\x08\x70\xac\x53\x50\x66\x23\xd6\xb6\x2e\xdd\x58\x9b\x1a\xca\xa2\xc8\xd5\xd3\x38\xfc\x32\xf8\x32\x3c\x16\x57\xd2\xba\x00\x12\x26\x24\x8d\x74\xc2\x84\x1a\xff\xa3\x2e\xc9\x52\x63\x11\x58\x32\x76\xb6\x61\x10\x48\xcd\x99\x74\xc9\x74\xe0\x83\x26\x78\xca\x8c\xf9\x1e\xd1\xb5\x90\x30\x0e\xc0\xf2\x20\x45\xfd\xb4\x0f\x4a\x41\xe0\x32\x53\xb7\xa8\xb6\x40\x0d\xe0\x4e\xb8\xc4\x72\xae\x33\x65\xc7\x2d\x39\x6f\x69\x00\x4a\x7a\x75\x0c\x86\xe3\xe7\x6e\x99\xed\x6e\x48\xba\x87\x4a\xee\x7e\x20\xdd\x1d\xe0\xca\xad\xc6\x60\xbb\x3f\x7a\x2f\x80\x44\x20\x21\x66\x16\x68\x86\xd2\x8c\x9f\xbb\x41\x37\x24\x6f\x06\x6d\xa0\x52\x2b\x0d\xe5\x80\x36\x0f\x85\x95\x26\x48\x51\xec\x98\x05\xf7\x7f\x9f\xa3\x3d\x56\xde\xc2\xbe\x5d\x77\x0b\xfb\xba\x2e\x97\x02\x94\x8b\x19\x47\xb0\x45\xb4\x77\x0c\x03\xcc\x54\x90\x2f\x9a\xa0\xd9\x7c\x45\x78\x8b\xe8\x06\x56\x6f\x41\x35\x10\xb5\xde\x0a\x68\x22\x1e\xf2\x57\x62\x9a\x9c\xa3\x96\xf9\xef\xf6\x44\x72\x56\x58\x6e\x85\xdf\x86\x0b\x40\x3f\x85\xe4\x65\xed\x77\x79\xce\xd9\x71\xe0\xcc\x56\xa4\x9e\x0f\x28\x42\x0c\x4f\xe3\xdf\xdd\x0c\x40\xc1\xcb\x2a\x01\xb5\xab\xf7\x4f\x4e\x11\xd7\x8f\x8f\xf3\xe5\xfc\xdb\xc3\xff\x7f\xab\xf5\xac\x67\xc9\x90\xf4\x7a\xad\xea\x8b\x77\xe8\xdf\x3f\x9c\x55\xae\xb8\x2d\x16\xc6\xe2\xbe\x9c\x61\x42\x07\x55\x74\x3e\x06\xda\x00\xd5\x7e\x6f\x3e\x11\x4d\xb2\xf3\x08\xf3\x4c\xca\x92\x46\x6e\xd6\xf7\xda\xce\x11\x0c\xa8\x26\x21\xd6\x26\xae\xc7\x29\xe7\x9d\x46\xdb\xe0\x96\x8a\x81\xe7\x1a\x6d\x48\x1a\xe4\x51\x62\x79\x82\xf9\x05\x88\x75\x74\x71\x27\x0e\xab\x3f\x41\xb1\x84\xec\xb4\xcc\x12\xb8\x73\xf5\xd5\x08\x47\xe2\x56\xe6\xcc\x6e\x42\x72\xdc\x95\x27\x61\x29\x3a\x07\x37\x09\x6d\x3b\xdf\xb8\xf6\x7e\x05\xb9\xd1\x66\xef\xc6\xae\xe7\xf4\x65\xf4\x92\x84\xdf\x0d\xdf\x30\x6c\x19\x48\x54\xea\xd8\x6a\x63\x23\x40\x6c\xac\x1b\xe0\x19\x02\x95\xc2\x58\x50\x8d\x99\x34\x6a\xe8\x79\x9e\x14\xe9\x06\x90\x9a\x4c\x58\x30\xe3\xc7\xdb\xc5\x72\x36\xbd\xbc\x9e\x2d\xbf\x2d\x26\xcb\xff\xdd\x3c\x5e\x2f\x27\xb3\xc5\x72\x38\xfa\xbc\xbc\x9a\xde\x2d\x17\xd7\x93\xd1\xc5\xbf\x3e\x1c\xb4\x66\xd3\xcb\x33\x7a\x27\x38\xd3\xaf\xd3\x37\xe1\xb4\xea\xbd\x82\xd6\xd8\x99\x6f\x5d\x4f\xb6\x94\x65\x91\x00\xc5\xc1\x8c\x5f\x0a\x74\xff\x40\x8b\xa7\xd3\xaf\x6f\x76\xbc\x01\x7d\x3c\x96\x87\xa3\x4f\xfd\x41\x7f\xd0\x1f\xfa\xb1\x1c\x9c\x06\x18\xb0\x4e\xec\x67\xa6\x91\x37\x29\xe4\x6e\x2c\xbd\x62\x79\x34\x9b\x2a\xc7\x28\x67\x35\x2b\xae\xd5\x5a\xc4\x09\x4b\x4d\xce\xe8\x2a\xf6\x1e\x19\xa7\xb5\xca\x54\x24\xa1\x64\x7a\xda\xa0\xf8\x37\xd3\xa4\x9b\x1a\x14\x57\x8c\xff\x1c\x55\x1e\xc1\xd0\xe1\xdb\xb9\x72\x74\xd2\x59\x0e\xe7\x57\xa5\x4a\xdf\x9c\xc2\xee\xa7\x5a\x59\x78\xb2\x21\x79\xfe\xf1\xb7\x22\x51\x17\x3f\x16\x3d\x28\xb9\x0f\xc9\x9a\x49\x03\xaf\x7c\xf3\x7c\xf1\x9d\xb8\x52\x99\xd0\xf3\x16\xa7\x8e\x20\xa4\x52\x70\x66\x42\x32\xea\x9c\xe4\xfe\x38\xef\x3e\x73\x9f\xaa\xcc\x95\x59\x1b\x5e\xe5\xe9\x6e\xa6\xba\x28\x90\xc1\x89\xfa\xe8\x62\x30\x28\xd3\xdc\x71\xe9\xf5\xcd\x34\xc9\x8f\x4d\xf7\x79\x39\x9e\x39\x53\xa7\x28\xb4\x2f\x09\xc9\x8c\xc9\x4d\xcc\xde\x58\x48\x28\x97\x99\xb1\x80\x94\xa3\xb0\x82\x33\xe9\xae\xeb\x9e\xd5\x6f\xdd\x65\xa0\xb8\x6b\xbb\xa3\x16\x5b\x49\x98\x44\x89\x50\x93\xf9\x4d\xb5\x8c\x60\x41\xb9\x72\x5a\x88\x3f\x21\x24\xc3\x2f\x57\x5f\xeb\xab\x21\xf9\xe7\xc0\x0d\x97\x37\xb7\x7a\xed\x75\xa0\xea\xf2\x73\x1d\xae\x74\x04\xcd\x2b\x78\xf3\x98\xa9\x4d\x48\xa4\x50\xd9\x53\xe7\xa5\xd6\x28\x22\x7a\x97\xbf\x7c\x34\xb1\xfc\x25\xfe\xb6\xf6\x80\xf1\x86\xf7\x89\x9e\x8b\x4e\xef\x04\xf8\xbe\xbc\x5d\xb4\x7c\xa1\xe5\x99\x80\x92\xe7\xfc\x79\xa0\x57\x05\xc9\x6d\xa7\x4c\xd8\xe1\x9d\xa6\xf7\xa1\xf6\x48\x70\xa9\xc1\xdc\x6b\x3b\x7b\x12\xc6\x12\xb7\x39\x16\x45\xc2\xe5\x82\xc9\x05\x47\x96\xc2\xd4\x97\x7f\xf1\x95\x82\xcc\x36\x49\xad\x15\x0f\x06\xd4\x78\x0b\x9a\x77\x4c\xde\xa0\xde\x23\xaf\x1c\xc1\xba\xbf\x67\x89\xcc\xc3\xea\x8e\x37\xe5\xe5\xfe\x88\x69\x8b\xd5\xb3\xbd\xff\x8a\xca\x9b\x70\x6a\xa7\x99\xdc\xe3\x3b\x96\x56\x3e\xbd\xd6\xeb\xb9\xc7\x12\xec\x81\x11\x6a\x72\x63\x35\xba\xf2\xed\x1c\xb8\x70\x2a\x99\x48\x1e\x21\x49\x5d\x91\x96\xf9\x2a\x1f\xa4\x8a\x5f\xb9\x55\xad\xe1\x7a\xc6\x32\x15\x31\x8c\x7a\xb5\x39\x71\x32\x3a\xda\x87\xc7\xc1\x0b\x32\xba\xb8\x12\x9d\xbf\x02\x00\x00\xff\xff\x45\x2f\x1e\xa2\xb1\x13\x00\x00")

func assetsPrometheusPrometheusYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusPrometheusYaml,
		"assets/prometheus/prometheus.yaml",
	)
}

func assetsPrometheusPrometheusYaml() (*asset, error) {
	bytes, err := assetsPrometheusPrometheusYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/prometheus.yaml", size: 5041, mode: os.FileMode(0644), modTime: time.Unix(1623161756, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4e, 0xfb, 0x19, 0x55, 0x9c, 0xd6, 0x2, 0x4f, 0x66, 0xd4, 0xd4, 0x99, 0x0, 0x78, 0xb9, 0x70, 0xae, 0x4, 0xd7, 0xe1, 0xbb, 0x84, 0x29, 0xba, 0x9d, 0xf9, 0x7b, 0x76, 0x56, 0x4c, 0x70, 0x19}}
	return a, nil
}

var _assetsPrometheusProxySecretYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8a\x31\x0e\xc2\x30\x10\x04\xfb\x7b\xc5\x7e\xc0\x05\x1d\xf2\x27\x28\x90\xe8\x2f\x64\xa5\x58\x89\x9d\xc3\x77\x41\x44\x88\xbf\xa3\xd0\xd3\x8d\x66\x46\xad\xdc\xd8\xbd\xac\x2d\xe3\x79\x92\x51\x43\x33\xde\x1f\x99\x4b\x1b\x33\xae\xbc\x77\x86\x54\x86\xfe\x8a\x00\x8b\x0e\x5c\xfc\x20\x60\x3e\x7b\x52\xb3\x8c\x3e\xd5\x64\x7d\xad\x8c\x89\x9b\xa7\xca\x60\x1f\xd4\x29\x40\xd3\xca\xff\xc3\x21\x5f\xbb\xc4\x6e\xcc\xb8\x98\x3e\x36\xca\x37\x00\x00\xff\xff\x80\x76\x1c\x8b\x93\x00\x00\x00")

func assetsPrometheusProxySecretYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusProxySecretYaml,
		"assets/prometheus/proxy-secret.yaml",
	)
}

func assetsPrometheusProxySecretYaml() (*asset, error) {
	bytes, err := assetsPrometheusProxySecretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/proxy-secret.yaml", size: 147, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x30, 0x35, 0x99, 0xa6, 0x8f, 0x38, 0xff, 0x45, 0x63, 0xc6, 0x2d, 0xc5, 0x7d, 0xb2, 0x64, 0xd2, 0xc4, 0x64, 0x9c, 0x64, 0xa9, 0x71, 0x12, 0x90, 0xfa, 0x86, 0x53, 0xf2, 0xb8, 0x2c, 0x7c, 0x43}}
	return a, nil
}

var _assetsPrometheusServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\xbb\x6e\x6a\x31\x10\x45\x7b\x7f\xc5\xfc\x80\xb9\x97\x74\xb8\x8b\x52\xd1\x21\x45\x4a\x3f\xc7\x6c\x38\x16\x7e\x69\x66\x40\xe2\xef\xa3\xf3\x40\x24\x42\x4a\x39\xe3\xbd\x96\xbd\x65\xee\xe9\x0b\xa2\xa9\xd5\x40\xb7\xad\xbb\xa4\x7a\x0c\xf4\x09\xb9\xa5\x08\x57\x60\x7c\x64\xe3\xe0\x88\xb8\xd6\x66\x6c\xa9\x55\x9d\x46\x22\x5d\x42\x9b\x01\xc6\x9b\xd6\x51\x75\x4c\x27\xdb\xa4\xf6\x6f\x3e\xa9\x67\x1f\x21\xe6\x15\x51\x60\xbe\x72\x41\x20\x19\x8b\xef\xd2\x0a\x6c\xc4\x55\x7d\x81\x41\x06\x56\x78\xcb\xea\x88\x32\x0f\xc8\xab\xfe\x19\x0b\x24\x38\x8e\x6c\xbe\xb0\x5c\x60\x3d\x73\x84\x23\xfa\xdb\xe8\xb4\x23\x4e\xa6\xde\xc4\x66\xa5\x5f\x89\xd1\xac\xeb\x72\x45\x13\x0b\xb4\xfb\xbf\xdb\xce\xa3\xb1\x9c\x61\x87\x79\xf9\x08\x3d\x20\x19\x38\xfe\x66\xde\x5e\x98\x35\xa3\xc8\x88\xd6\x64\xa9\xc1\xbd\x87\x1f\x5d\x5e\xaa\x3d\x1f\x3c\x91\x3a\x7d\xc4\xfb\xe9\x94\x6a\xb2\x7b\xa0\x8f\x9c\x50\x6d\x7f\x70\x44\x76\xef\x98\x16\x57\x35\xc8\xfe\xe0\xbe\x03\x00\x00\xff\xff\x4b\x07\xc2\x9b\xb8\x01\x00\x00")

func assetsPrometheusServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusServiceYaml,
		"assets/prometheus/service.yaml",
	)
}

func assetsPrometheusServiceYaml() (*asset, error) {
	bytes, err := assetsPrometheusServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/service.yaml", size: 440, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6b, 0x65, 0x47, 0xd9, 0xe8, 0x6a, 0x5a, 0xa0, 0x75, 0x87, 0xd1, 0xef, 0x28, 0xe2, 0x7f, 0x4b, 0x99, 0x87, 0x84, 0xa3, 0xb0, 0x67, 0x39, 0x3a, 0x35, 0x5, 0xa6, 0xa8, 0x69, 0xfd, 0xdc, 0x5d}}
	return a, nil
}

var _assetsPrometheusServingCertsCaBundleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcb\xb1\xae\xc2\x30\x0c\x46\xe1\x3d\x4f\x61\x65\x4f\xae\xee\x9a\x95\x99\x95\xfd\xaf\xeb\x16\x03\x75\xa2\xc4\xed\xf3\x23\x54\xc1\x78\xa4\xf3\xa1\xe9\x4d\xfa\xd0\x6a\x85\x8e\xff\x30\xc3\x51\x02\xd1\x90\x7e\x28\x4b\x62\x64\xee\x5e\x28\xc6\xf0\x54\x9b\x0b\x5d\xaa\x2d\xba\x5e\xd1\xc2\x26\x8e\xef\x0e\xb3\xea\x70\xad\x36\x3e\xf9\xf3\x79\x12\x47\xae\x4d\x6c\xdc\x75\xf1\xac\xf5\x4f\xed\x21\xec\x89\x31\xed\x36\xbf\xa4\x50\xf4\xbe\x4b\x0c\x44\x86\x4d\xca\x29\x6d\x4d\x2c\xdd\x47\x62\xa4\xf3\x0b\xef\x00\x00\x00\xff\xff\x64\x18\xbc\x32\xa9\x00\x00\x00")

func assetsPrometheusServingCertsCaBundleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusServingCertsCaBundleYaml,
		"assets/prometheus/serving-certs-ca-bundle.yaml",
	)
}

func assetsPrometheusServingCertsCaBundleYaml() (*asset, error) {
	bytes, err := assetsPrometheusServingCertsCaBundleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/serving-certs-ca-bundle.yaml", size: 169, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x14, 0x6e, 0x93, 0x4e, 0x33, 0x7f, 0xb9, 0xe7, 0x45, 0x41, 0x85, 0x6, 0x2c, 0x36, 0x84, 0x49, 0xf5, 0xbb, 0x7e, 0xc6, 0x6a, 0x11, 0xd5, 0x47, 0x81, 0x2e, 0xfa, 0xce, 0x48, 0x64, 0xa9, 0x37}}
	return a, nil
}

var _assetsPrometheusOperatorDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x57\x4d\x6f\xe2\x48\x10\xbd\xe7\x57\xf4\x6d\x2e\xdb\x38\x99\xc9\x8c\x22\x4b\x1c\x58\xc2\xcc\x44\x0a\x04\x85\xd1\xee\x11\x35\xed\x02\x5a\xf4\x87\xb7\xaa\x8c\x82\xd0\xfc\xf7\x55\xe3\x84\xb1\x8d\x49\x60\x33\xb7\xf5\x09\xba\x5f\xbd\xae\xcf\xe7\xb6\xca\xcd\x5f\x80\x64\x82\x4f\x85\xca\x73\x4a\xd6\x57\x17\x2b\xe3\xb3\x54\xdc\x42\x6e\xc3\xc6\x81\xe7\x0b\x07\xac\x32\xc5\x2a\xbd\x10\xc2\xaa\x19\x58\x8a\xbf\x44\x34\xe8\xac\x8a\x19\xa0\x07\x06\xea\x98\x90\xe8\xe0\xf2\xe0\xc1\x73\x2a\x74\xf0\x8c\xc1\x5a\xc0\x23\x58\xaf\x1c\xa4\x22\xc7\xe0\x80\x97\x50\x90\x0c\x39\xa0\xe2\x70\x0c\xbf\x7e\xf1\x73\x7d\xd9\xf9\x74\xd3\xb9\xba\x10\xe2\x38\x05\xe5\xa0\xa3\x93\x08\xb9\x35\x5a\x51\x2a\x22\x9e\xc0\x82\xe6\x80\xa5\xfb\x4e\xb1\x5e\xde\x57\xe2\x39\x2f\xa2\x73\x63\x62\x70\xb9\x55\x0c\xcf\x87\x57\x72\x1a\x1f\x5b\xf3\xe3\x5c\x4f\xce\xcf\xef\xc9\x39\x16\xe2\x25\x97\xf1\x89\x27\x2b\xe3\x01\x2b\xae\x4a\x61\x9c\x5a\x40\x2a\x10\xb2\xa5\x62\xe9\x14\xae\x80\x73\xab\x34\x48\x55\xf0\x52\x2f\x41\xaf\xd2\x18\x3a\xf1\xde\x48\x94\x46\xe3\xc2\xda\x71\xb0\x46\x6f\x52\x71\x37\x1f\x05\x1e\x23\x50\xec\xb9\x5f\xb8\x32\x8e\x3d\x51\x65\x07\x81\x42\x81\x1a\x2a\xbe\x94\xcb\xff\x14\x40\xdc\x58\x15\x42\xe7\x45\x2a\xae\x2e\x5d\x63\xd9\x81\x0b\xb8\x49\xc5\xc7\xcb\xa1\xa9\x6d\x59\xe3\xcc\xf9\x2c\x9f\x87\xa6\xbe\x53\x01\x32\xa0\x33\x5e\xb1\x09\x7e\x08\x44\x31\xfe\xe7\xd8\xbf\x2a\x6b\x67\x4a\xaf\x7e\x84\xfb\xb0\xa0\x07\x3f\x40\xac\x14\x4a\x0a\x85\x8b\x86\x27\x52\x48\x19\x8b\x67\x81\x25\x01\xae\x8d\x86\x6e\xfc\x2f\x69\x43\x0c\x2e\x79\xde\x3b\xb0\xb1\x61\xc1\x81\x38\x03\xc4\x2e\x63\x01\x07\x00\x1d\xfc\xdc\x2c\x24\x82\x0d\x2a\x03\x94\xbb\x3a\x75\xb7\xdb\xfe\xc3\xe8\xeb\xdd\xb7\x61\x6f\x3c\x7d\x1c\xdc\x3f\xf4\x6e\x07\x8f\xd3\xbb\x61\xef\xdb\xe0\xe7\xcf\x03\x8a\x4a\xd3\x35\xd8\xba\xdb\xed\xf8\xf1\x61\x38\x3d\x83\x2c\xd6\x9f\x72\xa5\x81\xba\xdb\xed\xa8\x37\x1c\x4c\xc6\xbd\xfe\x60\xf2\xfa\xb1\xc6\x13\x2b\xaf\xe1\x88\x75\x8b\xb1\xb2\x80\xec\x94\x57\x8b\x18\x73\x8b\xf9\x87\x0f\x07\x36\xbc\x54\x3e\x90\xc4\xc2\x9e\x6e\xd3\xe6\xe4\x8b\x2e\x75\x2b\xa3\xd3\x29\xa7\xa9\xa3\x83\x4b\x1c\x30\xa0\xf1\x8b\xf6\x82\x95\x4e\x4b\x8d\x19\x75\xe7\xca\x12\x34\x87\x2c\x4e\xe6\xc2\x10\xe3\xe6\x85\xd4\x84\x24\xe4\xe0\x69\x69\xe6\x7c\x9d\x04\x02\xd9\xa2\x13\xef\x1d\xd9\xd7\xa4\x47\x88\x3c\x60\x73\xb8\xe4\x2f\x79\x19\x07\xe4\x54\xdc\x5c\xde\x5c\x36\xe6\xac\xa4\x5e\x32\xe7\xef\x14\x82\xcf\xc7\x26\xf8\xcb\x6f\xd1\x81\xc8\x52\xdf\xa9\x00\x09\x74\x81\x86\x37\xfd\xe0\x19\x9e\x38\x15\xdb\x9f\xbf\x41\x25\x84\x58\x07\x5b\x38\x18\x86\xc2\x1f\xa6\xd6\xc5\xd5\xb1\xe2\x65\x2a\x12\x60\x9d\xb0\xa5\x24\x47\xb3\x56\x0c\xad\x29\x6e\xa9\x9e\x64\x4b\x0d\x2c\x82\xca\x1e\xbc\xdd\xa4\xa2\xde\x79\xc7\x14\xab\xa2\x3e\x07\x7b\xbb\xac\x80\xb4\x86\x18\xbc\x54\x59\x86\x40\xd4\x4d\x6f\xae\xaf\x3f\x1d\x4e\x9e\x25\xa9\x4d\xbe\x04\x94\x54\x18\x06\xea\xfe\xb8\x9f\x4c\x07\xfd\xdb\xef\x83\xe9\xe3\xa4\x37\xfd\xfb\xee\xc7\xf7\x69\x6f\x30\x99\x5e\x7d\xbc\x99\x7e\xeb\x0f\xa7\x93\xef\xbd\x8f\x9f\xbf\xfc\xf1\x0b\x35\xe8\xdf\xbe\x81\x3b\xe0\xe9\xff\xd9\x3f\x89\xa7\x15\xf7\x0a\xdb\x41\x74\x45\x4e\x8c\xa0\x5c\x37\xf6\x39\xa5\x49\xd2\x52\x8c\x4e\x4d\xce\x3a\xb4\xd6\x69\x1c\x97\xa4\x3d\x55\x80\x2c\xe7\xc6\x42\xb7\x59\xfb\xf8\xbb\xa3\xf1\xf0\x3d\x11\xcd\x9e\x31\x72\x05\x9b\x57\xac\x57\xb0\xf9\x2f\x8a\xb3\x7b\x59\xe1\x4c\xe9\xa8\x3d\x4f\x9b\xf7\xaa\x4d\x83\xee\x5c\xa5\x69\x36\x59\x55\x69\xe8\xbd\x77\x8e\x63\x22\x71\x7d\x8e\xd4\xbc\x46\x52\x59\xfe\x5f\xc9\x4c\xfb\x99\xe5\x9d\xc3\xa9\x9c\x92\x3d\xe7\x6e\x02\xb4\x92\xb3\xc2\x67\xb6\xdd\x95\x1a\x96\x8e\x82\xdb\x7d\xf1\x21\x83\x49\xed\xf3\x22\x3e\x33\x60\xd5\xb8\x62\x07\x4a\x85\x35\xbe\x78\xda\x83\xa2\xa9\xc4\x60\xa1\x81\x74\x8a\x18\x30\x15\xfb\x4b\x44\x8e\x26\xec\xea\x69\x15\xd1\x68\xe7\x73\x79\xd9\x93\xda\x16\x11\x2b\x35\x1a\x36\x5a\xd9\x8b\xb7\x1a\xe0\xf9\xc6\xd8\xd3\x3a\xe6\xae\xe4\x6a\xb9\xbe\x1f\x7f\x85\x73\xb0\xf1\xbf\x09\xbe\xf6\x25\x00\xf3\x39\x68\x4e\xc5\x28\x4c\xf4\x12\xb2\xa2\x96\xbd\x15\x6c\xd2\x37\xa2\xad\xa0\xf7\xd7\x10\x31\x78\x32\xc4\x2f\x2d\x51\x36\x5f\xed\xd0\x53\x3b\x89\x40\x23\x70\xbd\x63\xcb\xb5\xd1\x49\x0c\x3b\xd5\x98\x9b\xc5\x50\xe5\x75\x92\x93\xfb\xe7\x0d\xe0\xbf\x01\x00\x00\xff\xff\x2f\x9c\xad\x86\x8e\x0f\x00\x00")

func assetsPrometheusOperatorDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusOperatorDeploymentYaml,
		"assets/prometheus-operator/deployment.yaml",
	)
}

func assetsPrometheusOperatorDeploymentYaml() (*asset, error) {
	bytes, err := assetsPrometheusOperatorDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus-operator/deployment.yaml", size: 3982, mode: os.FileMode(0644), modTime: time.Unix(1623161756, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa9, 0x5d, 0xdd, 0xb0, 0xab, 0xb4, 0xa7, 0x49, 0xcf, 0xc5, 0xaf, 0xf9, 0xfa, 0xa8, 0xcf, 0xc6, 0x3f, 0x88, 0x34, 0xee, 0x9b, 0x13, 0x8a, 0x9d, 0x70, 0x4c, 0xf5, 0xbd, 0x28, 0x40, 0xc6, 0x19}}
	return a, nil
}

var _assetsPrometheusOperatorOperatorCertsCaBundleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcb\xb1\xae\xc2\x30\x0c\x40\xd1\x3d\x5f\x61\x65\x4f\x9e\xde\x9a\x95\x99\x95\xdd\x75\x5c\x30\x50\x3b\x72\xdc\x7e\x3f\x42\x08\xc6\x2b\x9d\x8b\x43\x2e\xec\x53\x4c\x1b\x1c\xff\xa9\x63\x60\x4b\x00\x93\xfd\x10\xe2\x42\x58\xc9\xa3\x41\xce\xe9\x21\xda\x1b\x9c\x4c\x57\xb9\x9e\x71\xa4\x8d\x03\xbf\x1c\x55\x2d\x30\xc4\x74\xbe\xf3\xf7\xd7\x85\x03\xab\x0d\xd6\x79\x93\x35\xaa\xd8\x9f\xe8\x9d\x29\x0a\xe1\xb2\x6b\x7f\x72\x83\x1c\xbe\x73\x4e\x00\x8a\x1b\x37\xb0\xc1\x8e\x61\x5e\x88\x3d\x66\x21\x2c\x1f\x98\x5e\x01\x00\x00\xff\xff\xaf\x31\x0b\x93\xaa\x00\x00\x00")

func assetsPrometheusOperatorOperatorCertsCaBundleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusOperatorOperatorCertsCaBundleYaml,
		"assets/prometheus-operator/operator-certs-ca-bundle.yaml",
	)
}

func assetsPrometheusOperatorOperatorCertsCaBundleYaml() (*asset, error) {
	bytes, err := assetsPrometheusOperatorOperatorCertsCaBundleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus-operator/operator-certs-ca-bundle.yaml", size: 170, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa1, 0xdf, 0x64, 0x34, 0x32, 0xdf, 0x88, 0x59, 0xb2, 0x9b, 0x78, 0x91, 0xbe, 0x4d, 0x79, 0x35, 0x9d, 0x14, 0x5e, 0xda, 0x7b, 0xdf, 0x6c, 0xe8, 0x60, 0xb8, 0xa1, 0x33, 0x51, 0xe9, 0x30, 0x6d}}
	return a, nil
}

var _assetsPrometheusOperatorServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\x41\x6e\xea\x40\x0c\x86\xf7\x39\x85\x2f\x90\x3c\x10\x2c\xd0\xdc\xe0\x6d\x2a\xa4\x4a\xdd\x3b\xc3\x5f\x18\x31\xb1\x47\xb6\xa1\xd7\xaf\x92\x42\x55\xa9\xca\xb2\x4b\xdb\xdf\xf7\xdb\x33\xdc\xca\x1b\xcc\x8b\x4a\xa2\xfb\xb6\xbb\x16\x39\x25\x7a\x85\xdd\x4b\x46\x37\x21\xf8\xc4\xc1\xa9\x23\x62\x11\x0d\x8e\xa2\xe2\x73\x49\xe4\x5f\xd0\x30\x22\x78\xd0\x06\xf1\x4b\x79\x8f\xa1\xe8\xbf\x65\x22\xe7\x3e\xc3\xa2\x77\x64\x43\xf4\xc2\x13\x12\x35\xd3\x09\x71\xc1\xcd\x7b\x6d\x30\x0e\xb5\x3e\xaa\x77\x44\x95\x47\xd4\x47\x32\xb7\x36\x5c\x6f\x23\x4c\x10\xf0\x39\x31\xeb\xd4\x54\x20\x91\x28\xab\x84\x69\xad\xb0\x15\x76\x75\xd3\x0a\x7f\xff\x7e\xfe\x66\xd8\x1d\x86\x6d\x47\xb4\x1e\xe1\x0d\x79\x3e\x32\xd7\x9b\x07\xec\xff\x31\xd1\x8b\x0a\x3a\xa2\xa6\x16\xcb\xfd\xfd\x43\xbf\x44\x34\x5f\x76\xce\xa3\x44\x87\xfd\x7e\xb7\x94\xc1\x76\x46\x1c\x97\xe6\x13\x7a\x4a\x1f\x18\x7f\x2a\x9b\xc3\xe6\x97\xf2\x68\x3a\x2a\x72\xa8\xfd\xed\x97\x7d\x06\x00\x00\xff\xff\x88\x7e\x8f\x4a\x1f\x02\x00\x00")

func assetsPrometheusOperatorServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusOperatorServiceYaml,
		"assets/prometheus-operator/service.yaml",
	)
}

func assetsPrometheusOperatorServiceYaml() (*asset, error) {
	bytes, err := assetsPrometheusOperatorServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus-operator/service.yaml", size: 543, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x67, 0xe1, 0xe5, 0x1, 0x98, 0xa3, 0x4e, 0x7, 0x9f, 0x3a, 0x6, 0x40, 0x8, 0xa0, 0x35, 0xcf, 0xb2, 0x6a, 0x55, 0x83, 0x11, 0x54, 0xa4, 0x81, 0xfd, 0xbb, 0x7, 0xc5, 0xfa, 0x98, 0x1f, 0x39}}
	return a, nil
}

var _assetsRazeeRazeeJobYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x50\xb1\x6e\xeb\x30\x0c\xdc\xfd\x15\x42\xe6\xe7\x04\xc6\x43\x17\x6d\x5d\x8b\x22\xe8\xd4\x9d\xa6\x2f\x35\x6b\x49\x54\x25\xda\x80\xfb\xf5\x85\x13\xa7\xc8\x52\x4e\x87\xe3\xdd\xf1\x40\xca\xf2\x8e\x52\x45\x93\x77\x3d\x19\x8f\xa7\xa5\x6b\x26\x49\x83\x77\x2f\xda\x37\x11\x46\x03\x19\xf9\xc6\xb9\x44\x11\xde\x15\xfa\x06\x06\xe4\xa0\x6b\xfb\xa9\xfd\xce\xd7\x4c\xbc\x2d\xc7\xd8\x46\x2a\x13\x2c\x07\x62\x34\x35\x83\x37\xab\x21\xe6\x40\x86\x0d\x3b\x77\x67\xaf\x18\x65\x11\xc6\x33\xb3\xce\xc9\xce\xb7\x13\x18\x46\xb2\xc7\xa0\x56\x33\x0a\x99\x96\xdd\xc5\x9a\x8c\x24\xa1\xd4\x7b\x4e\xfb\x67\xbd\xdb\x48\xa4\x0f\x78\x77\xf8\x9a\x69\x3d\x8a\x9e\xae\xba\xd3\xa3\x7a\x40\x30\xf2\xdd\xb1\x3b\xfe\x3f\xfc\xda\x58\x63\xa4\xed\x19\x92\xaa\x51\x08\xff\xe6\xb4\xa3\x5d\x52\x50\x8d\x8a\xbd\x69\x10\x5e\xbd\x3b\x63\xc1\x56\xb2\x27\x9e\xf4\x72\x79\x95\x28\xe6\xdd\x53\xf3\x13\x00\x00\xff\xff\x91\xe6\x95\xeb\x67\x01\x00\x00")

func assetsRazeeRazeeJobYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRazeeRazeeJobYaml,
		"assets/razee/razee-job.yaml",
	)
}

func assetsRazeeRazeeJobYaml() (*asset, error) {
	bytes, err := assetsRazeeRazeeJobYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/razee/razee-job.yaml", size: 359, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa0, 0xba, 0x89, 0x9d, 0x86, 0xdc, 0x14, 0xd1, 0xe1, 0x32, 0x9a, 0x88, 0x81, 0xb7, 0x68, 0x91, 0xfd, 0x32, 0x62, 0x3e, 0x5e, 0x1f, 0x7f, 0x5a, 0x62, 0x4e, 0x6e, 0x73, 0xe3, 0xc, 0x8d, 0x3a}}
	return a, nil
}

var _assetsRazeeRazeeNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\xce\xcc\x4b\xb1\x52\xf0\x4b\xcc\x4d\x2d\x2e\x48\x4c\x4e\xe5\xca\x4d\x2d\x49\x4c\x49\x2c\x49\xb4\xe2\x52\x50\xc8\x4b\xcc\x4d\xb5\x52\x28\x4a\xac\x4a\x4d\x05\x04\x00\x00\xff\xff\x0e\x49\xcb\x5c\x36\x00\x00\x00")

func assetsRazeeRazeeNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRazeeRazeeNamespaceYaml,
		"assets/razee/razee-namespace.yaml",
	)
}

func assetsRazeeRazeeNamespaceYaml() (*asset, error) {
	bytes, err := assetsRazeeRazeeNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/razee/razee-namespace.yaml", size: 54, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x14, 0xab, 0x1e, 0xd8, 0x3a, 0x3e, 0x60, 0x88, 0x41, 0x4e, 0xab, 0xe2, 0x19, 0x9b, 0x62, 0x10, 0x7f, 0x1, 0xc1, 0x93, 0x68, 0x59, 0xb2, 0xe5, 0xb5, 0x67, 0xaa, 0x38, 0x8, 0x64, 0xcb, 0x66}}
	return a, nil
}

var _assetsRazeeRemoteResourceS3Yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x73\xe2\x46\x10\xbd\xf3\x2b\xfa\xc6\x49\xc8\x02\x63\x7b\xe7\xe6\x32\xde\x4a\x2a\xcb\xda\x85\xd9\xe4\xe8\x6a\x46\x0d\x9a\x62\xbe\x76\xa6\x85\xa3\xa4\xf2\xdf\x53\x42\x06\x4b\xc2\x5e\x33\x27\x55\xcf\xeb\xd7\xdd\xaf\x9f\x06\xbd\xfa\x93\x42\x54\xce\x0a\x40\xef\x63\xba\xcb\x06\x5b\x65\x73\x01\x33\xf2\xda\x55\x86\x2c\x0f\x0c\x31\xe6\xc8\x28\x06\x00\x16\x0d\x09\x08\x64\x1c\x53\xa0\xe8\xca\x20\x29\x4e\x12\xe9\x2c\x07\xa7\x35\x85\x01\x00\x5a\xeb\x18\x59\x39\x1b\xeb\x14\x80\x80\xff\x10\x8d\x94\x4b\x37\x8a\x93\x40\xde\x09\x18\x16\xcc\x3e\x8a\xb4\x0e\x15\xe5\x6a\x24\x9d\x49\xf7\xb0\x44\xb9\x74\xb1\xa7\x5f\xbc\xd2\x3f\x4d\x46\x1b\xc5\xc3\x2e\x93\x74\xc6\x28\x4e\x62\x81\x02\x86\xd3\xeb\xeb\x6c\xbd\x9a\x5c\x65\x57\x52\x66\x39\x8e\xbf\xdc\xdc\x5c\x4d\xaf\x32\x9a\xdc\x8c\xd7\xd9\x74\x9d\x4f\xb2\x4b\x79\x3d\xcd\xbf\xd4\x1c\x1a\x57\xa4\xdb\x7d\xa5\x2f\xc8\xb2\x48\x0e\xc3\x08\x18\x6a\xc5\x34\x1c\x44\x4f\xb2\x86\x05\xf2\x5a\x49\x8c\x02\xb2\x01\x40\x24\x4d\x92\x5d\x68\x08\x4c\x9d\xfa\xad\xc5\x08\xb5\x8a\x9f\xe9\x13\x39\x20\xd3\xa6\x6a\x52\xb8\xf2\x24\x60\xe1\xb4\x56\x76\xf3\xc3\xe7\xc8\x34\x00\x60\x32\x5e\x23\xd3\x6b\x9d\xd6\x06\xea\xa3\x3b\x25\xcf\x2a\xda\x9c\x5f\x4e\xdc\x40\xce\xd9\x30\xc0\x41\x9d\xfd\x37\x85\x9d\x92\x74\x2b\xa5\x2b\x2d\x7f\x6f\xf2\xeb\x42\xf9\xde\x43\x49\xc4\x57\x60\xcd\x81\xca\x52\x68\xb5\x9e\x80\x32\xb8\xd9\x57\xcc\x0b\xe4\xc4\x60\xd8\x12\x7b\x8d\x92\x12\x2c\xb9\x90\x05\xc9\xad\xa8\xa5\x88\x7c\x4c\x3a\x74\x79\x04\xb4\x6e\x8e\x3d\x8b\x56\xb0\x0e\xff\x2c\x29\x72\x2f\x0a\x20\x7d\x29\x20\xbb\x30\xbd\xb0\x21\xe3\x42\x25\x60\x7c\x31\x57\xad\x2b\xa6\x60\x94\xdd\x7b\x7b\x4e\x31\xe2\x86\x1e\x9d\x56\xb2\x12\xf0\x15\xb5\x5e\xa1\xdc\x2e\xdd\x37\xb7\x89\x0f\xf6\x3e\x04\x17\x4e\xa7\x1c\xfe\x2c\xb1\xaa\x0d\xdc\x6c\xa2\x2f\xb3\xb8\x18\x4d\x47\xe3\xe1\xe7\xe3\x68\x65\xd4\xe9\x30\x6f\x5d\x77\xdb\x6e\x0d\xda\x9b\xf4\x23\x59\x0e\x4c\xd7\xd3\xf7\x89\x2e\x3b\x3c\x64\x77\x5d\x82\xe4\x75\x41\x77\x8b\xd9\xf3\x5f\xb7\xcb\xbb\xdf\x9e\x97\xbf\xcf\xef\x1f\x7e\x2c\x9f\x9f\xee\xef\x1e\xbe\xcf\x9e\x7a\x9c\x3b\xd4\x25\x7d\x0d\xce\xf4\xfb\xd8\x9b\x66\xad\x36\x73\xf4\x7f\x50\xb5\xa0\xf5\x29\xe0\x68\xd9\x96\xe5\xdc\x8e\x42\x50\x39\xc5\x77\xd0\x5b\xaa\xce\x6f\xac\x3e\xce\xd7\xfb\x46\x2d\x80\x43\x49\x2d\xc0\x7e\xa7\x8f\xa5\xd6\x07\x13\xdc\xea\x17\xac\xe2\x89\x4d\xcf\xf9\x33\xeb\x95\xee\xc8\x52\x8c\x8f\xc1\xad\xa8\x3b\x26\xfd\xfd\xf6\xb7\xbd\xe9\x62\x0c\xda\xfc\x54\x8f\x04\x62\x91\x1e\xc8\x46\xb1\xe8\x00\x94\x55\xac\x50\xcf\x48\x63\xf5\x44\xd2\xd9\x3c\x0a\x98\x5c\x74\x30\x9e\x82\x72\xf9\xf1\x36\x9b\x76\xaf\x59\x19\x72\x25\x7f\x94\xbd\x46\xa5\xcb\x40\xcb\x22\x50\x2c\x9c\xce\x9b\x77\xf3\x70\x76\x4e\x97\x86\xe6\xf5\x43\x11\xfb\x96\x31\x75\xf4\x11\xb9\x10\x90\x96\x31\xa4\x31\xc8\x14\xbd\x4f\x73\xf7\x62\xb5\xc3\x3c\x91\x28\x0b\xea\xcd\xdb\x28\xbc\xbf\x49\x1a\xf2\x33\x59\x1b\x5f\xbd\xcb\xd6\x76\x52\x07\xd6\x14\xe8\xbc\x5e\xbf\xac\x4f\xc6\x73\x35\x53\x41\xc0\xbf\xff\x9d\xe4\x7c\x58\x05\xda\xae\xef\x8a\x74\x46\x26\x40\x4e\x6b\x2c\x35\xcf\x5d\x4e\x02\x2e\xc7\xdd\xf5\xf4\xcc\xfc\x7f\x00\x00\x00\xff\xff\x81\x99\xe9\xc2\x01\x08\x00\x00")

func assetsRazeeRemoteResourceS3YamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRazeeRemoteResourceS3Yaml,
		"assets/razee/remote-resource-s3.yaml",
	)
}

func assetsRazeeRemoteResourceS3Yaml() (*asset, error) {
	bytes, err := assetsRazeeRemoteResourceS3YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/razee/remote-resource-s3.yaml", size: 2049, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf2, 0x62, 0xe3, 0x1a, 0x5d, 0x8c, 0xe5, 0xab, 0x24, 0x99, 0x93, 0x0, 0x42, 0x17, 0x2f, 0xb2, 0x53, 0x67, 0x48, 0x76, 0x1, 0x54, 0x7d, 0x2a, 0xd6, 0x1f, 0xd4, 0x1a, 0x83, 0x10, 0xe1, 0x85}}
	return a, nil
}

var _assetsRazeeWatchKeeperYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\xdf\x73\x1a\x47\x0c\x7e\xe7\xaf\xd0\xf0\x7e\xdc\x81\x83\x93\xee\x1b\x53\x68\x33\x13\xe3\x30\xd8\x49\x9b\xbe\x30\xf2\x9e\x8e\xdb\xf1\xfe\xca\xee\x1e\xe9\xf5\xaf\xef\x2c\x87\xf1\x62\x8e\x34\x9e\xe9\x4c\xf6\x89\xd3\x27\x7d\xfa\x24\x21\xa1\x15\x9f\xc9\x79\x61\x34\x03\xb4\xd6\xe7\xbb\xf1\xe0\x51\xe8\x92\xc1\x9c\xac\x34\xad\x22\x1d\x06\x8a\x02\x96\x18\x90\x0d\x00\x50\x6b\x13\x30\x08\xa3\x7d\xfc\x04\xd8\x3d\x85\x0f\x0b\x7c\xf7\xae\xa4\xe9\xe4\xfa\xaa\xe2\xc4\x7f\xe1\xd5\xc3\xb4\xa2\x29\x5e\x55\xe3\xe9\xdb\x09\x11\xbf\xc2\x92\x5f\xbf\x1d\x4f\x86\xfb\x38\x87\xff\x10\x8d\x84\xc9\xb7\x22\x64\x8e\xac\x61\x30\xac\x43\xb0\x9e\xe5\xd1\x54\x37\x0f\x23\x6e\x54\xbe\x77\xcb\x84\xc9\xff\xc0\xc0\xeb\xec\x91\xc8\x92\x1b\x6d\x45\x78\xc1\xc2\x8d\x52\x22\x64\xbe\xc6\x57\x2a\xd1\xa8\x88\xc1\xb7\x84\x7d\x00\x20\xf1\x81\xe4\xa1\xc0\x7d\x8a\xbc\x73\x70\xe4\x4d\xe3\x38\x31\x18\x4a\x11\x68\x38\xf0\x96\x78\x74\x73\x64\xa5\xe0\xe8\x19\x8c\xf7\x5f\x3b\x11\x9b\xf2\x5e\xf8\x60\x5c\x7b\x23\x94\x08\x0c\x8a\x01\x80\x27\x49\x3c\x18\xd7\x51\xab\x48\x7a\x93\xe4\x82\x38\x84\x33\x35\x3e\x38\x0c\xb4\x6d\x3b\x9f\xd0\x5a\x62\xb0\x36\x52\x0a\xbd\xfd\x64\x4b\x0c\x34\x00\x08\xa4\xac\xc4\x40\x07\xe2\x64\x62\xf1\xc9\x93\x1c\xfd\x59\xba\xf7\xdd\x6a\x3b\x97\xde\x8e\x01\x3c\xb5\x62\xff\x9b\xdc\x4e\x70\x9a\x71\x6e\x1a\x1d\x6e\xcf\x02\x32\x8f\x07\x4f\x6e\x74\x40\xa1\xc9\x1d\xd5\x65\x40\x7a\xf7\x2c\x35\x1a\xba\x8c\x77\xf7\xb3\xf5\xfd\x66\xbe\xb8\x99\x7d\xd9\x2c\x67\x7f\x26\x1e\x00\x3b\x94\x0d\xfd\xe6\x8c\x62\x27\xe6\x3d\x7f\x25\xb6\x4b\xb4\x1f\xa8\x5d\x53\xf5\x12\xee\xab\x26\xeb\x62\xce\x3c\x1f\xa9\xfd\xbe\x88\xf8\x8c\x8d\xbb\x81\x92\x41\x70\x0d\xf5\x54\x71\x3b\x5b\x2e\xee\x56\xb3\x5f\x17\x3f\xa6\xbf\x12\x24\xcb\x5e\xe1\x7b\x64\x85\xa1\x66\xc7\x71\x8f\x62\x0a\x6f\x91\xf7\x25\x5e\xcf\xfe\x5a\x2c\xe6\xb3\xbb\xf7\x9b\x4f\xeb\x9b\x9f\xd3\xbc\x4b\x12\xce\x25\x7e\x5c\xff\xbe\xf9\xb0\xf8\xf2\x63\x32\x3d\x71\x47\xe1\x15\x1a\xbb\x80\xff\xd2\x78\xae\xe1\x38\xc3\x8f\xf3\xc5\x66\x71\xfb\xf9\x5c\x1e\x83\xa1\x75\xa6\x6c\x78\xfc\x17\x0c\x8f\xb8\x50\xb8\x8d\xd8\xd7\x06\xdb\x78\xad\xd2\x2d\xeb\x34\xb1\x62\x34\x1d\x4d\x5e\x44\xac\x1a\x29\x57\x46\x0a\xde\x32\x98\xc9\x6f\xd8\xfa\xc1\xe5\xaa\x9e\x57\xf8\xb0\xb6\x3e\xed\x85\x8c\x37\xc8\x9f\x76\x47\x91\x32\xae\x65\x30\x2d\x8a\xa5\x38\x41\xb8\x6d\x18\xbc\x29\x0a\x95\x58\x1d\x7d\x6d\xc8\x5f\xe2\x18\xf7\x73\x4c\x13\x0a\x29\x76\xa4\xc9\xfb\x95\x33\x0f\x94\xb2\xd0\xdf\xcf\x97\xe3\x10\x6b\x94\x42\x5d\x9e\x1a\x33\xf0\x75\xfe\x44\x32\xf2\x75\x02\x0a\x2d\x82\x40\x39\x27\x89\xed\x1d\x71\xa3\x4b\xcf\xe0\xba\x28\x12\x17\x4b\x4e\x98\xf2\x08\x5e\x9d\x80\x41\x28\x32\x4d\x48\xd0\x04\xac\x50\xc8\xc6\xd1\x7d\xed\xc8\xd7\x46\x96\xdd\x8d\xef\xde\xce\xc8\x46\xd1\x32\x5e\xb9\xa4\x31\x19\xa8\x68\xe9\x96\x33\x6f\xbc\xcb\xbd\xe3\x39\x5a\x9b\xef\xc7\x90\x59\x23\x65\x92\xa0\x9b\x65\x0f\x74\x99\x47\x1b\x9d\x1d\x97\xbd\x3c\xe3\xea\x85\x3b\xad\xc9\x9d\x3d\xae\x77\xda\xe7\x92\x2a\x6c\x64\x58\x9a\x92\x18\xbc\x99\x14\x67\xdc\x27\x9b\xd4\x23\xfa\x42\x35\xff\x4b\xba\x0b\x65\xf7\x16\xfd\x6f\x00\x00\x00\xff\xff\x5e\x39\x40\x98\xdb\x08\x00\x00")

func assetsRazeeWatchKeeperYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRazeeWatchKeeperYaml,
		"assets/razee/watch-keeper.yaml",
	)
}

func assetsRazeeWatchKeeperYaml() (*asset, error) {
	bytes, err := assetsRazeeWatchKeeperYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/razee/watch-keeper.yaml", size: 2267, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcb, 0xaf, 0x3d, 0x6a, 0x73, 0xa7, 0x17, 0xe5, 0x27, 0xe, 0x4d, 0x69, 0xf2, 0x7c, 0x55, 0xcd, 0xef, 0x74, 0xba, 0x8e, 0x2, 0xa4, 0x2d, 0x79, 0xaa, 0xd2, 0x91, 0x34, 0x2b, 0x5e, 0xc8, 0xd8}}
	return a, nil
}

var _assetsReporterJobYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x3d\x8f\xdb\x30\x0c\xdd\xfd\x2b\x08\x74\xc8\x52\xc5\x77\x28\xd0\x41\x5b\xd6\x02\xd7\x06\xe8\xc7\x52\x74\x60\x64\x26\x56\xa3\x2f\x50\xb4\xdb\xfc\xfb\x42\x76\x5c\xd8\xbe\xdc\x5d\x3c\x59\xd4\x23\xdf\xe3\xa3\x24\x4c\xf6\x07\x71\xb6\x31\x68\x38\xa0\x98\xb6\xee\x1f\xab\xb3\x0d\x8d\x86\x4f\xf1\x50\x79\x12\x6c\x50\x50\x57\x00\x01\x3d\x69\xe0\xd6\x2b\x4f\x42\xac\x98\x52\x64\xa9\x00\x1c\x1e\xc8\xe5\x02\x01\xf0\xc8\x67\x92\xe4\xd0\xd0\x96\xa9\x69\x51\xb6\x26\xfa\x7a\xc4\x6a\xd8\x08\x77\xb4\xa9\x72\x22\x53\xf0\x26\xfa\xe4\x48\x6c\x0c\x59\xc3\x63\x05\x90\x90\xd1\x39\x72\x36\xfb\x31\x20\xe4\x93\x43\xa1\xb1\xfa\x94\x37\xfc\x13\xf7\xd6\xd0\xce\x98\xd8\x05\xd1\x30\xb2\xa9\x99\x00\x15\x13\x31\x4a\xe4\x6b\x06\x53\x16\x64\xd9\x47\x67\xcd\x45\xc3\x67\xea\x69\xda\x32\x31\x08\xda\x40\x9c\xa7\xf2\x00\x6a\xea\x78\xd0\xfe\x1f\x5a\x3e\xeb\xf1\x44\x0b\xca\x91\xf0\x25\xe8\xbe\x73\x6e\xa2\xdd\xb9\x3f\x78\xc9\x33\xc4\x3b\xc0\xa6\xb1\xc5\x04\x74\x80\x7c\xca\x80\x4c\x25\x46\x0d\xd8\x00\x47\x34\x12\xf9\x32\x4b\x28\x18\x3d\x5b\x03\xfc\x5c\xac\x00\x36\xa3\x90\xcd\xfb\x75\x5c\x29\x83\x47\xeb\xe8\xf9\x4e\x4d\x62\x6a\x13\xc3\xd1\x9e\x3c\xa6\x5c\x4f\xde\x29\x43\x2c\xca\xa0\x3a\x74\xa1\x71\x54\x5f\x6d\x57\x06\xb7\xe6\x36\x83\xc4\x33\x85\x57\x48\xb0\x93\x56\x4d\x65\x70\x1c\x5f\x3d\x24\xad\x12\x7e\xcd\x56\xdc\x85\x5d\xfe\x9e\x89\xe7\x8d\xf7\xd1\x75\x9e\x9e\x4a\x81\x95\x21\x0a\x7c\x89\xee\x51\x5a\x0d\x77\xb6\xb6\x12\x3b\x0e\x7f\x81\xcd\x2f\x82\x99\xb0\xf9\x12\xdc\x45\x43\x39\xe0\x6f\x48\xb9\x65\xc0\x4d\xf2\xc1\x14\xd5\x47\x77\x0f\xdb\x68\xc6\xe2\xfc\x8e\x3d\x3f\x61\x5a\x9a\x73\x77\x67\x77\x02\xd5\x2b\x72\x13\xc7\xdf\x64\x84\x9a\xa5\x84\x1c\x3b\x36\xb4\x1a\x5a\xa9\xb4\xbc\xd5\xdf\x4a\xc5\x35\xa8\x7c\xd8\x35\x96\x82\xb9\xbe\x47\x89\xa3\x27\x69\xa9\xcb\xe3\xd3\x74\xc0\x4c\xdb\x98\x28\xe4\xd6\x1e\x45\x3d\x7f\x19\xb6\xb9\x37\x37\xaa\xd2\xdf\x64\x19\xcb\x4d\xfc\x4a\x26\x86\x26\x6b\xf8\xf0\xf1\xe1\xe1\x06\x32\x0d\xd3\x1c\x1a\xae\xfe\x05\x00\x00\xff\xff\x33\xab\x41\x79\x43\x05\x00\x00")

func assetsReporterJobYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReporterJobYaml,
		"assets/reporter/job.yaml",
	)
}

func assetsReporterJobYaml() (*asset, error) {
	bytes, err := assetsReporterJobYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reporter/job.yaml", size: 1347, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4a, 0x47, 0x80, 0x7d, 0x34, 0x37, 0x4f, 0x98, 0x12, 0x20, 0x9e, 0x47, 0xb, 0xb8, 0x74, 0x66, 0x3f, 0x87, 0xf1, 0xa4, 0xa, 0x8d, 0x9b, 0x7, 0xd9, 0x47, 0xb3, 0x76, 0x94, 0xb1, 0x60, 0x49}}
	return a, nil
}

var _assetsSignerCaPem = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\xcb\xb2\xaa\x38\x14\x86\xe7\x3c\x45\xcf\xad\x2e\xc4\x8d\x28\xc3\x15\x12\x2e\x6a\xd0\x40\x00\x61\x06\xe8\x06\x11\x50\x40\x6e\x3e\x7d\x97\x7b\x74\xea\xf4\xe9\x41\x67\xb8\xea\x4b\xd5\x97\xfc\xc9\xff\xf7\x67\x21\x62\x58\xf6\x5f\x1a\x71\xb8\xa5\x5b\x1a\x70\xf2\x33\x15\xa8\x65\xe1\x88\x6b\x1a\xdc\x57\x19\x8c\x16\x82\xcc\xda\xc1\x3e\xdd\x4f\xc3\xf9\x95\x4e\xf5\x4c\x61\x69\x68\x6e\x63\xb8\x56\xf2\x85\x19\x41\xda\xe8\x01\x25\xd9\xa4\xbd\x61\x87\x32\xdb\x17\x10\x84\x1c\x4a\x9f\x53\xd6\x8d\x1a\x0b\xb1\xcf\x98\x85\x61\x77\x64\x6f\xc2\x28\xc8\x06\x48\x1e\x41\xe3\x68\x7a\x95\xde\x45\x41\x59\xc7\x98\x50\x0a\x8f\x9f\xb9\x96\x8d\x58\x70\xbd\x9d\x4d\xd9\x38\x6a\xd9\xcf\xe6\x03\x06\xdb\x75\xc9\x72\xb4\x50\x6a\xd3\x82\x8c\x94\x93\x89\xf2\xfb\x68\x73\xb2\x0e\xf2\xec\x44\xdf\x30\x53\x0c\x12\xe5\x6c\x3a\x72\x90\x04\xca\xcb\xf8\x57\xa5\xff\x6b\x24\xfc\xae\xf4\x5f\x46\x59\x46\x6e\xbf\xdf\x07\x30\x0f\x04\x90\x2d\x84\x47\xf8\x00\x7b\x78\x58\x08\x18\x7e\x5e\x63\x5b\x7a\xdd\xa6\xda\x0d\x56\x56\x93\x40\x33\x71\xe4\xad\x62\x2e\x7b\x2e\x2e\xa0\xbf\xf8\x43\x7f\x7f\x3a\x6e\x55\x9e\x65\xd0\x85\x1c\xba\xfc\x7b\xa4\xf1\x70\x75\xb9\xe4\xb1\x78\x9f\x6d\xa5\xa3\x5d\x03\xe6\x61\x08\xf5\xec\x2d\xc3\x59\xf3\xcb\xf4\x52\x87\xd5\x81\xb5\x43\x58\x16\xe6\x88\xa5\xf6\x60\x2f\xaa\xac\x81\xd7\x4e\x68\xed\x4d\x00\x60\x14\xb0\x11\xc3\xfa\x75\x20\xb9\xfa\xf4\x57\x5d\xde\x0c\xd3\xe3\x2d\x5e\xa2\x5c\x5e\x14\xd1\x76\x86\xfd\x42\xbc\x76\xdd\x69\x2a\xae\xc3\xba\xb6\xad\x52\xdb\xc6\xa6\x3f\x14\x8c\x08\xae\xcb\x8a\x79\xfe\xf2\x87\xc6\x36\x42\xdd\xdd\xd4\x96\x22\xb7\xa7\xb3\x2f\x72\xb3\xde\x3f\xe0\xa5\x3a\xd8\xd4\x5d\xcb\x34\xa2\x8d\x3c\x04\xe7\xd9\xdf\x89\x63\x3a\x78\xc6\x02\x9e\x62\xbc\x59\x33\x81\x58\xfc\x94\x1e\xc9\xb2\xe7\x69\xf1\xb8\x3e\x82\x38\x79\xb5\xaa\x13\x68\xab\x94\x6d\x1d\x35\x27\x41\xbf\x08\x76\x74\x9c\x0e\xe2\x2e\xf9\x72\xef\xf8\xac\x1e\x34\xde\xce\x45\xed\x5c\xd6\x8a\x12\xc5\x42\x8b\x93\xb0\x4f\x5a\x37\x36\x02\xca\xbf\x8b\x22\x8b\xc4\x40\xc6\xa6\x97\xa5\x4c\x4c\x7b\x74\xce\xb6\x74\xa6\x81\x53\x43\x46\xd1\xe7\xa8\x1e\x46\x47\x8a\x96\x9f\xd4\x2e\x38\x63\x81\x80\x10\x5f\x9c\x7a\x13\x65\x2b\xf9\x59\xc9\x89\x64\xe9\xad\x79\x18\xb9\x47\x7b\xb4\x48\x38\x7c\x7f\xde\x86\xe9\x52\x62\x60\x08\xb2\x3f\xb0\xc2\x2f\x30\xfd\x81\x1d\x4a\x10\x07\x0c\xcc\x14\xff\xf4\x0f\x3e\xb1\x03\x43\xc9\x5a\x31\xf0\xaa\xd5\x3c\xc1\xdc\xac\x91\xdb\xa8\x78\xc3\x5a\xe7\xe1\x74\xf5\x15\x3b\x8a\xeb\x6b\xa0\x85\xf6\xf6\xf2\x5c\x05\x5f\x70\xfb\x7a\x95\xdf\xbc\x92\x82\x4b\x77\x8d\xc3\xb8\x52\x1d\x32\x58\x53\xfc\x08\x78\x3f\xee\x7b\xa1\xf2\xc3\xab\x58\x89\x51\x93\xf0\x88\x06\x4a\x73\x30\x1c\x11\x55\x1e\xbb\x59\x4f\x59\xbc\x44\x4e\x4e\xc0\x66\x48\x75\x57\x8f\x66\x2c\xa3\xde\x97\x67\xf9\x40\x31\x4a\xfc\xb3\xf2\xad\x47\x26\x11\x22\xbb\xbc\x2b\xf7\x63\xa1\xa7\x79\xb7\xe7\xeb\x93\xeb\xa8\x97\x41\x76\x0d\xfa\xd6\x89\xa8\x76\x63\x6b\xfa\xdb\xeb\xc9\x1e\x38\xc3\xeb\x3c\x2a\x4d\xb1\x52\x4a\x8b\x6e\xce\x45\xbe\x97\xbf\xc7\xa8\x13\x5e\x4b\x58\x1c\x90\x62\xdc\xcf\x12\x0d\x1f\x71\xaf\x9c\x32\x69\x1b\x9c\x4b\xfa\x16\x9b\x27\x0f\xda\xdd\x2b\xe2\xba\x1b\x15\xe6\x3a\xec\xf9\xac\xfb\xd7\x7a\x4f\xa6\xcc\x5f\x1e\xfb\xce\x1d\x56\xc6\x97\x30\x33\xe3\xa5\xf7\x3d\x91\xde\x3b\x96\xd6\x8b\x63\xa3\x48\x67\xde\xf7\x1c\xa6\x44\xcd\x9b\x34\xb2\x16\x8f\x14\x44\xf5\x36\x2e\xaa\x57\xbf\xf6\xab\x3b\x2d\xd3\x4d\xba\x4f\xa6\xba\xe9\x8c\x40\x95\x85\xe4\xb0\x62\xef\x72\x7d\x53\xe6\x40\x16\x7e\x4a\x8a\xd8\xf8\xdf\xc5\xf5\x4f\x00\x00\x00\xff\xff\x87\xc1\x51\xe6\xd5\x04\x00\x00")

func assetsSignerCaPemBytes() ([]byte, error) {
	return bindataRead(
		_assetsSignerCaPem,
		"assets/signer/ca.pem",
	)
}

func assetsSignerCaPem() (*asset, error) {
	bytes, err := assetsSignerCaPemBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/signer/ca.pem", size: 1237, mode: os.FileMode(0644), modTime: time.Unix(1620299739, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc7, 0x15, 0x9, 0xd4, 0xb3, 0xa2, 0x82, 0xd5, 0x88, 0x1c, 0xd6, 0x5, 0x93, 0x1, 0x43, 0xa0, 0xfc, 0xc1, 0xe2, 0x88, 0xf1, 0x9c, 0x9b, 0x86, 0x82, 0x7f, 0xf6, 0x81, 0x52, 0x8b, 0x89, 0x19}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/metric-state/deployment.yaml":                      assetsMetricStateDeploymentYaml,
	"assets/metric-state/service-monitor.yaml":                 assetsMetricStateServiceMonitorYaml,
	"assets/metric-state/service.yaml":                         assetsMetricStateServiceYaml,
	"assets/prometheus/additional-scrape-configs.yaml":         assetsPrometheusAdditionalScrapeConfigsYaml,
	"assets/prometheus/htpasswd-secret.yaml":                   assetsPrometheusHtpasswdSecretYaml,
	"assets/prometheus/kube-rbac-proxy-secret.yaml":            assetsPrometheusKubeRbacProxySecretYaml,
	"assets/prometheus/kube-state-service-monitor.yaml":        assetsPrometheusKubeStateServiceMonitorYaml,
	"assets/prometheus/kubelet-serving-ca-bundle.yaml":         assetsPrometheusKubeletServingCaBundleYaml,
	"assets/prometheus/prometheus-additional.yaml":             assetsPrometheusPrometheusAdditionalYaml,
	"assets/prometheus/prometheus-datasources-secret.yaml":     assetsPrometheusPrometheusDatasourcesSecretYaml,
	"assets/prometheus/prometheus-rules.yaml":                  assetsPrometheusPrometheusRulesYaml,
	"assets/prometheus/prometheus.yaml":                        assetsPrometheusPrometheusYaml,
	"assets/prometheus/proxy-secret.yaml":                      assetsPrometheusProxySecretYaml,
	"assets/prometheus/service.yaml":                           assetsPrometheusServiceYaml,
	"assets/prometheus/serving-certs-ca-bundle.yaml":           assetsPrometheusServingCertsCaBundleYaml,
	"assets/prometheus-operator/deployment.yaml":               assetsPrometheusOperatorDeploymentYaml,
	"assets/prometheus-operator/operator-certs-ca-bundle.yaml": assetsPrometheusOperatorOperatorCertsCaBundleYaml,
	"assets/prometheus-operator/service.yaml":                  assetsPrometheusOperatorServiceYaml,
	"assets/razee/razee-job.yaml":                              assetsRazeeRazeeJobYaml,
	"assets/razee/razee-namespace.yaml":                        assetsRazeeRazeeNamespaceYaml,
	"assets/razee/remote-resource-s3.yaml":                     assetsRazeeRemoteResourceS3Yaml,
	"assets/razee/watch-keeper.yaml":                           assetsRazeeWatchKeeperYaml,
	"assets/reporter/job.yaml":                                 assetsReporterJobYaml,
	"assets/signer/ca.pem":                                     assetsSignerCaPem,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": {nil, map[string]*bintree{
		"metric-state": {nil, map[string]*bintree{
			"deployment.yaml": {assetsMetricStateDeploymentYaml, map[string]*bintree{}},
			"service-monitor.yaml": {assetsMetricStateServiceMonitorYaml, map[string]*bintree{}},
			"service.yaml": {assetsMetricStateServiceYaml, map[string]*bintree{}},
		}},
		"prometheus": {nil, map[string]*bintree{
			"additional-scrape-configs.yaml": {assetsPrometheusAdditionalScrapeConfigsYaml, map[string]*bintree{}},
			"htpasswd-secret.yaml": {assetsPrometheusHtpasswdSecretYaml, map[string]*bintree{}},
			"kube-rbac-proxy-secret.yaml": {assetsPrometheusKubeRbacProxySecretYaml, map[string]*bintree{}},
			"kube-state-service-monitor.yaml": {assetsPrometheusKubeStateServiceMonitorYaml, map[string]*bintree{}},
			"kubelet-serving-ca-bundle.yaml": {assetsPrometheusKubeletServingCaBundleYaml, map[string]*bintree{}},
			"prometheus-additional.yaml": {assetsPrometheusPrometheusAdditionalYaml, map[string]*bintree{}},
			"prometheus-datasources-secret.yaml": {assetsPrometheusPrometheusDatasourcesSecretYaml, map[string]*bintree{}},
			"prometheus-rules.yaml": {assetsPrometheusPrometheusRulesYaml, map[string]*bintree{}},
			"prometheus.yaml": {assetsPrometheusPrometheusYaml, map[string]*bintree{}},
			"proxy-secret.yaml": {assetsPrometheusProxySecretYaml, map[string]*bintree{}},
			"service.yaml": {assetsPrometheusServiceYaml, map[string]*bintree{}},
			"serving-certs-ca-bundle.yaml": {assetsPrometheusServingCertsCaBundleYaml, map[string]*bintree{}},
		}},
		"prometheus-operator": {nil, map[string]*bintree{
			"deployment.yaml": {assetsPrometheusOperatorDeploymentYaml, map[string]*bintree{}},
			"operator-certs-ca-bundle.yaml": {assetsPrometheusOperatorOperatorCertsCaBundleYaml, map[string]*bintree{}},
			"service.yaml": {assetsPrometheusOperatorServiceYaml, map[string]*bintree{}},
		}},
		"razee": {nil, map[string]*bintree{
			"razee-job.yaml": {assetsRazeeRazeeJobYaml, map[string]*bintree{}},
			"razee-namespace.yaml": {assetsRazeeRazeeNamespaceYaml, map[string]*bintree{}},
			"remote-resource-s3.yaml": {assetsRazeeRemoteResourceS3Yaml, map[string]*bintree{}},
			"watch-keeper.yaml": {assetsRazeeWatchKeeperYaml, map[string]*bintree{}},
		}},
		"reporter": {nil, map[string]*bintree{
			"job.yaml": {assetsReporterJobYaml, map[string]*bintree{}},
		}},
		"signer": {nil, map[string]*bintree{
			"ca.pem": {assetsSignerCaPem, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
